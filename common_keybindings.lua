local common_vim_keybindings = {
    { mode = "Insert", lhs = "CTRL-@", desc = "insert previously inserted text and stop" },
    { mode = "Insert", lhs = "CTRL-A", desc = "insert previously inserted text" },
    { mode = "Insert", lhs = "CTRL-C", desc = "quit insert mode, without checking for" },
    { mode = "Insert", lhs = "CTRL-D", desc = "delete one shiftwidth of indent in the current" },
    { mode = "Insert", lhs = "CTRL-E", desc = "insert the character which is below the cursor" },
    { mode = "Insert", lhs = "CTRL-G CTRL-J", desc = "line down, to column where inserting started" },
    { mode = "Insert", lhs = "CTRL-G j", desc = "line down, to column where inserting started" },
    { mode = "Insert", lhs = "CTRL-G <Down>", desc = "line down, to column where inserting started" },
    { mode = "Insert", lhs = "CTRL-G CTRL-K", desc = "line up, to column where inserting started" },
    { mode = "Insert", lhs = "CTRL-G k", desc = "line up, to column where inserting started" },
    { mode = "Insert", lhs = "CTRL-G <Up>", desc = "line up, to column where inserting started" },
    { mode = "Insert", lhs = "CTRL-G u", desc = "start new undoable edit" },
    { mode = "Insert", lhs = "CTRL-G U", desc = "don't break undo with next cursor movement" },
    { mode = "Insert", lhs = "<BS>", desc = "delete character before the cursor" },
    { mode = "Insert", lhs = "CTRL-H", desc = "same as <BS>" },
    { mode = "Insert", lhs = "<Tab>", desc = "insert a <Tab> character" },
    { mode = "Insert", lhs = "CTRL-I", desc = "same as <Tab>" },
    { mode = "Insert", lhs = "<NL>", desc = "same as <CR>" },
    { mode = "Insert", lhs = "CTRL-J", desc = "same as <CR>" },
    { mode = "Insert", lhs = "<CR>", desc = "begin new line" },
    { mode = "Insert", lhs = "CTRL-M", desc = "same as <CR>" },
    { mode = "Insert", lhs = "CTRL-N", desc = "find next match for keyword in front of the" },
    { mode = "Insert", lhs = "CTRL-O", desc = "execute a single command and return to insert" },
    { mode = "Insert", lhs = "CTRL-P", desc = "find previous match for keyword in front of" },
    { mode = "Insert", lhs = "CTRL-Q", desc = "same as CTRL-V, unless used for terminal" },
    { mode = "Insert", lhs = "CTRL-T", desc = "insert one shiftwidth of indent in current" },
    { mode = "Insert", lhs = "CTRL-U", desc = "delete all entered characters in the current" },
    { mode = "Insert", lhs = "CTRL-V {char}", desc = "insert next non-digit literally" },
    { mode = "Insert", lhs = "CTRL-W", desc = "delete word before the cursor" },
    { mode = "Insert", lhs = "CTRL-X {mode}", desc = "enter CTRL-X sub mode, see |i_CTRL-X_index|" },
    { mode = "Insert", lhs = "CTRL-Y", desc = "insert the character which is above the cursor" },
    { mode = "Insert", lhs = "<Esc>", desc = "end insert mode" },
    { mode = "Insert", lhs = "CTRL-[", desc = "same as <Esc>" },
    { mode = "Normal", lhs = "CTRL-\\ CTRL-N", desc = "go to Normal mode" },
    { mode = "Normal", lhs = "CTRL-\\ CTRL-G", desc = "go to Normal mode" },
    { mode = "Normal", lhs = "CTRL-]", desc = "trigger abbreviation" },
    { mode = "Normal", lhs = "CTRL-^", desc = "toggle use of |:lmap| mappings" },
    { mode = "Normal", lhs = "CTRL-_", desc = "When 'allowrevins' set: toggle 'revins'" },
    { mode = "Normal", lhs = "0 CTRL-D", desc = "delete all indent in the current line" },
    { mode = "Normal", lhs = "^ CTRL-D", desc = "delete all indent in the current line, restore" },
    { mode = "Normal", lhs = "<Del>", desc = "delete character under the cursor" },
    { mode = "Normal", lhs = "<Left>", desc = "cursor one character left" },
    { mode = "Normal", lhs = "<S-Left>", desc = "cursor one word left" },
    { mode = "Normal", lhs = "<C-Left>", desc = "cursor one word left" },
    { mode = "Normal", lhs = "<Right>", desc = "cursor one character right" },
    { mode = "Normal", lhs = "<S-Right>", desc = "cursor one word right" },
    { mode = "Normal", lhs = "<C-Right>", desc = "cursor one word right" },
    { mode = "Normal", lhs = "<Up>", desc = "cursor one line up" },
    { mode = "Normal", lhs = "<S-Up>", desc = "same as <PageUp>" },
    { mode = "Normal", lhs = "<Down>", desc = "cursor one line down" },
    { mode = "Normal", lhs = "<S-Down>", desc = "same as <PageDown>" },
    { mode = "Normal", lhs = "<Home>", desc = "cursor to start of line" },
    { mode = "Normal", lhs = "<C-Home>", desc = "cursor to start of file" },
    { mode = "Normal", lhs = "<End>", desc = "cursor past end of line" },
    { mode = "Normal", lhs = "<C-End>", desc = "cursor past end of file" },
    { mode = "Normal", lhs = "<PageUp>", desc = "one screenful backward" },
    { mode = "Normal", lhs = "<PageDown>", desc = "one screenful forward" },
    { mode = "Normal", lhs = "<F1>", desc = "same as <Help>" },
    { mode = "Normal", lhs = "<Help>", desc = "stop insert mode and display help window" },
    { mode = "Normal", lhs = "<Insert>", desc = "toggle Insert/Replace mode" },
    { mode = "Normal", lhs = "<LeftMouse>", desc = "cursor at mouse click" },
    { mode = "Normal", lhs = "<ScrollWheelDown>", desc = "move window three lines down" },
    { mode = "Normal", lhs = "<S-ScrollWheelDown>", desc = "move window one page down" },
    { mode = "Normal", lhs = "<ScrollWheelUp>", desc = "move window three lines up" },
    { mode = "Normal", lhs = "<S-ScrollWheelUp>", desc = "move window one page up" },
    { mode = "Normal", lhs = "<ScrollWheelLeft>", desc = "move window six columns left" },
    { mode = "Normal", lhs = "<S-ScrollWheelLeft>", desc = "move window one page left" },
    { mode = "Normal", lhs = "<ScrollWheelRight>", desc = "move window six columns right" },
    { mode = "Normal", lhs = "<S-ScrollWheelRight>", desc = "move window one page right" },
    { mode = "Normal", lhs = "CTRL-X CTRL-D", desc = "complete defined identifiers" },
    { mode = "Normal", lhs = "CTRL-X CTRL-E", desc = "scroll up" },
    { mode = "Normal", lhs = "CTRL-X CTRL-F", desc = "complete file names" },
    { mode = "Normal", lhs = "CTRL-X CTRL-I", desc = "complete identifiers" },
    { mode = "Normal", lhs = "CTRL-X CTRL-K", desc = "complete identifiers from dictionary" },
    { mode = "Normal", lhs = "CTRL-X CTRL-L", desc = "complete whole lines" },
    { mode = "Normal", lhs = "CTRL-X CTRL-N", desc = "next completion" },
    { mode = "Normal", lhs = "CTRL-X CTRL-O", desc = "omni completion" },
    { mode = "Normal", lhs = "CTRL-X CTRL-P", desc = "previous completion" },
    { mode = "Normal", lhs = "CTRL-X CTRL-S", desc = "spelling suggestions" },
    { mode = "Normal", lhs = "CTRL-X CTRL-T", desc = "complete identifiers from thesaurus" },
    { mode = "Normal", lhs = "CTRL-X CTRL-Y", desc = "scroll down" },
    { mode = "Normal", lhs = "CTRL-X CTRL-U", desc = "complete with 'completefunc'" },
    { mode = "Normal", lhs = "CTRL-X CTRL-V", desc = "complete like in : command line" },
    { mode = "Normal", lhs = "CTRL-X CTRL-Z", desc = "stop completion, keeping the text as-is" },
    { mode = "Normal", lhs = "CTRL-X CTRL-]", desc = "complete tags" },
    { mode = "Normal", lhs = "CTRL-X s", desc = "spelling suggestions" },
    { mode = "Normal", lhs = "CTRL-E", desc = "stop completion and go back to original text" },
    { mode = "Normal", lhs = "CTRL-Y", desc = "accept selected match and stop completion" },
    { mode = "Normal", lhs = "CTRL-A", desc = "add N to number at/after cursor" },
    { mode = "Normal", lhs = "CTRL-B", desc = "scroll N screens Backwards" },
    { mode = "Normal", lhs = "CTRL-C", desc = "interrupt current (search) command" },
    { mode = "Normal", lhs = "CTRL-D", desc = "scroll Down N lines (default: half a screen)" },
    { mode = "Normal", lhs = "CTRL-E", desc = "scroll N lines upwards (N lines Extra)" },
    { mode = "Normal", lhs = "CTRL-F", desc = "scroll N screens Forward" },
    { mode = "Normal", lhs = "CTRL-G", desc = "display current file name and position" },
    { mode = "Normal", lhs = "<BS>", desc = "same as \"h\"" },
    { mode = "Normal", lhs = "CTRL-H", desc = "same as \"h\"" },
    { mode = "Normal", lhs = "<Tab>", desc = "go to N newer entry in jump list" },
    { mode = "Normal", lhs = "CTRL-I", desc = "same as <Tab>" },
    { mode = "Normal", lhs = "<NL>", desc = "same as \"j\"" },
    { mode = "Normal", lhs = "CTRL-J", desc = "same as \"j\"" },
    { mode = "Normal", lhs = "CTRL-L", desc = "redraw screen" },
    { mode = "Normal", lhs = "<CR>", desc = "cursor to the first CHAR N lines lower" },
    { mode = "Normal", lhs = "CTRL-M", desc = "same as <CR>" },
    { mode = "Normal", lhs = "CTRL-N", desc = "same as \"j\"" },
    { mode = "Normal", lhs = "CTRL-O", desc = "go to N older entry in jump list" },
    { mode = "Normal", lhs = "CTRL-P", desc = "same as \"k\"" },
    { mode = "Normal", lhs = "CTRL-R", desc = "redo changes which were undone with 'u'" },
    { mode = "Normal", lhs = "CTRL-T", desc = "jump to N older Tag in tag list" },
    { mode = "Normal", lhs = "CTRL-U", desc = "scroll N lines Upwards (default: half a" },
    { mode = "Visual", lhs = "CTRL-V", desc = "start blockwise Visual mode" },
    { mode = "Visual", lhs = "CTRL-W {char}", desc = "window commands, see |CTRL-W|" },
    { mode = "Visual", lhs = "CTRL-X", desc = "subtract N from number at/after cursor" },
    { mode = "Visual", lhs = "CTRL-Y", desc = "scroll N lines downwards" },
    { mode = "Visual", lhs = "CTRL-Z", desc = "suspend program (or start new shell)" },
    { mode = "Normal", lhs = "CTRL-\\ CTRL-N", desc = "go to Normal mode (no-op)" },
    { mode = "Normal", lhs = "CTRL-\\ CTRL-G", desc = "go to Normal mode (no-op)" },
    { mode = "Normal", lhs = "CTRL-]", desc = ":ta to ident under cursor" },
    { mode = "Normal", lhs = "CTRL-^", desc = "edit Nth alternate file (equivalent to" },
    { mode = "Normal", lhs = "CTRL-<Tab>", desc = "same as `g<Tab>` : go to last accessed tab" },
    { mode = "Normal", lhs = "<Space>", desc = "same as \"l\"" },
    { mode = "Normal", lhs = "!!{filter}", desc = "filter N lines through the {filter} command" },
    { mode = "Normal", lhs = "\"{register}", desc = "use {register} for next delete, yank or put" },
    { mode = "Normal", lhs = "#", desc = "search backward for the Nth occurrence of" },
    { mode = "Normal", lhs = "$", desc = "cursor to the end of Nth next line" },
    { mode = "Normal", lhs = "%", desc = "find the next (curly/square) bracket on" },
    { mode = "Normal", lhs = "{count}%", desc = "go to N percentage in the file" },
    { mode = "Normal", lhs = "&", desc = "repeat last :s" },
    { mode = "Normal", lhs = "'{a-zA-Z0-9}", desc = "cursor to the first CHAR on the line with" },
    { mode = "Normal", lhs = "''", desc = "cursor to the first CHAR of the line where" },
    { mode = "Normal", lhs = "'(", desc = "cursor to the first CHAR on the line of the" },
    { mode = "Normal", lhs = "')", desc = "cursor to the first CHAR on the line of the" },
    { mode = "Normal", lhs = "'<", desc = "cursor to the first CHAR of the line where" },
    { mode = "Normal", lhs = "'>", desc = "cursor to the first CHAR of the line where" },
    { mode = "Normal", lhs = "'[", desc = "cursor to the first CHAR on the line of the" },
    { mode = "Normal", lhs = "']", desc = "cursor to the first CHAR on the line of the" },
    { mode = "Normal", lhs = "'{", desc = "cursor to the first CHAR on the line of the" },
    { mode = "Normal", lhs = "'}", desc = "cursor to the first CHAR on the line of the" },
    { mode = "Normal", lhs = "(", desc = "cursor N sentences backward" },
    { mode = "Normal", lhs = ")", desc = "cursor N sentences forward" },
    { mode = "Normal", lhs = "*", desc = "search forward for the Nth occurrence of" },
    { mode = "Normal", lhs = "+", desc = "same as <CR>" },
    { mode = "Normal", lhs = ",", desc = "repeat latest f, t, F or T in opposite" },
    { mode = "Normal", lhs = "-", desc = "cursor to the first CHAR N lines higher" },
    { mode = "Normal", lhs = ".", desc = "repeat last change with count replaced with" },
    { mode = "Normal", lhs = "/{pattern}<CR>", desc = "search forward for the Nth occurrence of" },
    { mode = "Normal", lhs = "/<CR>", desc = "search forward for {pattern} of last search" },
    { mode = "Normal", lhs = "0", desc = "cursor to the first char of the line" },
    { mode = "Normal", lhs = "1", desc = "prepend to command to give a count" },
    { mode = "Normal", lhs = "2", desc = "\"" },
    { mode = "Normal", lhs = "3", desc = "\"" },
    { mode = "Normal", lhs = "4", desc = "\"" },
    { mode = "Normal", lhs = "5", desc = "\"" },
    { mode = "Normal", lhs = "6", desc = "\"" },
    { mode = "Normal", lhs = "7", desc = "\"" },
    { mode = "Normal", lhs = "8", desc = "\"" },
    { mode = "Normal", lhs = "9", desc = "\"" },
    { mode = "Normal", lhs = ":", desc = "start entering an Ex command" },
    { mode = "Normal", lhs = "{count}:", desc = "start entering an Ex command with range" },
    { mode = "Normal", lhs = ";", desc = "repeat latest f, t, F or T N times" },
    { mode = "Normal", lhs = "<{motion}", desc = "shift Nmove lines one 'shiftwidth'" },
    { mode = "Normal", lhs = "<<", desc = "shift N lines one 'shiftwidth' leftwards" },
    { mode = "Normal", lhs = "={motion}", desc = "filter Nmove lines through \"indent\"" },
    { mode = "Normal", lhs = "==", desc = "filter N lines through \"indent\"" },
    { mode = "Normal", lhs = ">{motion}", desc = "shift Nmove lines one 'shiftwidth'" },
    { mode = "Normal", lhs = ">>", desc = "shift N lines one 'shiftwidth' rightwards" },
    { mode = "Normal", lhs = "?{pattern}<CR>", desc = "search backward for the Nth previous" },
    { mode = "Normal", lhs = "?<CR>", desc = "search backward for {pattern} of last search" },
    { mode = "Normal", lhs = "@{a-z}", desc = "execute the contents of register {a-z}" },
    { mode = "Normal", lhs = "@:", desc = "repeat the previous \":\" command N times" },
    { mode = "Normal", lhs = "@@", desc = "repeat the previous @{a-z} N times" },
    { mode = "Normal", lhs = "A", desc = "append text after the end of the line N times" },
    { mode = "Normal", lhs = "B", desc = "cursor N WORDS backward" },
    { mode = "Normal", lhs = "[\"x]C", desc = "change from the cursor position to the end" },
    { mode = "Normal", lhs = "[\"x]D", desc = "delete the characters under the cursor" },
    { mode = "Normal", lhs = "E", desc = "cursor forward to the end of WORD N" },
    { mode = "Normal", lhs = "F{char}", desc = "cursor to the Nth occurrence of {char} to" },
    { mode = "Normal", lhs = "G", desc = "cursor to line N, default last line" },
    { mode = "Normal", lhs = "H", desc = "cursor to line N from top of screen" },
    { mode = "Normal", lhs = "I", desc = "insert text before the first CHAR on the" },
    { mode = "Normal", lhs = "J", desc = "Join N lines; default is 2" },
    { mode = "Normal", lhs = "K", desc = "lookup Keyword under the cursor with" },
    { mode = "Normal", lhs = "L", desc = "cursor to line N from bottom of screen" },
    { mode = "Normal", lhs = "M", desc = "cursor to middle line of screen" },
    { mode = "Normal", lhs = "N", desc = "repeat the latest '/' or '?' N times in" },
    { mode = "Normal", lhs = "O", desc = "begin a new line above the cursor and" },
    { mode = "Normal", lhs = "[\"x]P", desc = "put the text [from register x] before the" },
    { mode = "Normal", lhs = "R", desc = "enter replace mode: overtype existing" },
    { mode = "Normal", lhs = "[\"x]S", desc = "delete N lines [into register x] and start" },
    { mode = "Normal", lhs = "T{char}", desc = "cursor till after Nth occurrence of {char}" },
    { mode = "Normal", lhs = "U", desc = "undo all latest changes on one line" },
    { mode = "Visual", lhs = "V", desc = "start linewise Visual mode" },
    { mode = "Visual", lhs = "W", desc = "cursor N WORDS forward" },
    { mode = "Visual", lhs = "[\"x]X", desc = "delete N characters before the cursor [into" },
    { mode = "Visual", lhs = "[\"x]Y", desc = "yank N lines [into register x]; synonym for" },
    { mode = "Visual", lhs = "ZZ", desc = "write if buffer changed and close window" },
    { mode = "Visual", lhs = "ZQ", desc = "close window without writing" },
    { mode = "Visual", lhs = "[{char}", desc = "square bracket command (see |[| below)" },
    { mode = "Visual", lhs = "]{char}", desc = "square bracket command (see |]| below)" },
    { mode = "Visual", lhs = "^", desc = "cursor to the first CHAR of the line" },
    { mode = "Visual", lhs = "_", desc = "cursor to the first CHAR N - 1 lines lower" },
    { mode = "Visual", lhs = "`{a-zA-Z0-9}", desc = "cursor to the mark {a-zA-Z0-9}" },
    { mode = "Visual", lhs = "`(", desc = "cursor to the start of the current sentence" },
    { mode = "Visual", lhs = "`)", desc = "cursor to the end of the current sentence" },
    { mode = "Visual", lhs = "`<", desc = "cursor to the start of the highlighted area" },
    { mode = "Visual", lhs = "`>", desc = "cursor to the end of the highlighted area" },
    { mode = "Visual", lhs = "`[", desc = "cursor to the start of last operated text" },
    { mode = "Visual", lhs = "`]", desc = "cursor to the end of last operated text or" },
    { mode = "Visual", lhs = "\"``\"", desc = "cursor to the position before latest jump" },
    { mode = "Visual", lhs = "`{", desc = "cursor to the start of the current paragraph" },
    { mode = "Visual", lhs = "`}", desc = "cursor to the end of the current paragraph" },
    { mode = "Visual", lhs = "a", desc = "append text after the cursor N times" },
    { mode = "Visual", lhs = "b", desc = "cursor N words backward" },
    { mode = "Visual", lhs = "[\"x]c{motion}", desc = "delete Nmove text [into register x] and" },
    { mode = "Visual", lhs = "[\"x]cc", desc = "delete N lines [into register x] and start" },
    { mode = "Visual", lhs = "[\"x]d{motion}", desc = "delete Nmove text [into register x]" },
    { mode = "Visual", lhs = "[\"x]dd", desc = "delete N lines [into register x]" },
    { mode = "Visual", lhs = "do", desc = "same as \":diffget\"" },
    { mode = "Visual", lhs = "dp", desc = "same as \":diffput\"" },
    { mode = "Visual", lhs = "e", desc = "cursor forward to the end of word N" },
    { mode = "Visual", lhs = "f{char}", desc = "cursor to Nth occurrence of {char} to the" },
    { mode = "Visual", lhs = "g{char}", desc = "extended commands, see |g| below" },
    { mode = "Visual", lhs = "h", desc = "cursor N chars to the left" },
    { mode = "Visual", lhs = "i", desc = "insert text before the cursor N times" },
    { mode = "Visual", lhs = "j", desc = "cursor N lines downward" },
    { mode = "Visual", lhs = "k", desc = "cursor N lines upward" },
    { mode = "Visual", lhs = "l", desc = "cursor N chars to the right" },
    { mode = "Visual", lhs = "m{A-Za-z}", desc = "set mark {A-Za-z} at cursor position" },
    { mode = "Visual", lhs = "n", desc = "repeat the latest '/' or '?' N times" },
    { mode = "Visual", lhs = "o", desc = "begin a new line below the cursor and" },
    { mode = "Visual", lhs = "[\"x]p", desc = "put the text [from register x] after the" },
    { mode = "Visual", lhs = "q{0-9a-zA-Z\"}", desc = "record typed characters into named register" },
    { mode = "Visual", lhs = "q", desc = "(while recording) stops recording" },
    { mode = "Visual", lhs = "Q", desc = "replay last recorded register" },
    { mode = "Visual", lhs = "q:", desc = "edit : command-line in command-line window" },
    { mode = "Visual", lhs = "q/", desc = "edit / command-line in command-line window" },
    { mode = "Visual", lhs = "q?", desc = "edit ? command-line in command-line window" },
    { mode = "Visual", lhs = "r{char}", desc = "replace N chars with {char}" },
    { mode = "Visual", lhs = "[\"x]s", desc = "(substitute) delete N characters [into" },
    { mode = "Visual", lhs = "t{char}", desc = "cursor till before Nth occurrence of {char}" },
    { mode = "Visual", lhs = "u", desc = "undo changes" },
    { mode = "Visual", lhs = "v", desc = "start charwise Visual mode" },
    { mode = "Visual", lhs = "w", desc = "cursor N words forward" },
    { mode = "Visual", lhs = "[\"x]x", desc = "delete N characters under and after the" },
    { mode = "Visual", lhs = "[\"x]y{motion}", desc = "yank Nmove text [into register x]" },
    { mode = "Visual", lhs = "[\"x]yy", desc = "yank N lines [into register x]" },
    { mode = "Visual", lhs = "z{char}", desc = "commands starting with 'z', see |z| below" },
    { mode = "Visual", lhs = "{", desc = "cursor N paragraphs backward" },
    { mode = "Visual", lhs = "|", desc = "cursor to column N" },
    { mode = "Visual", lhs = "}", desc = "cursor N paragraphs forward" },
    { mode = "Visual", lhs = "~", desc = "'tildeop' off: switch case of N characters" },
    { mode = "Visual", lhs = "~{motion}", desc = "'tildeop' on: switch case of Nmove text" },
    { mode = "Visual", lhs = "<C-End>", desc = "same as \"G\"" },
    { mode = "Visual", lhs = "<C-Home>", desc = "same as \"gg\"" },
    { mode = "Visual", lhs = "<C-Left>", desc = "same as \"b\"" },
    { mode = "Visual", lhs = "<C-LeftMouse>", desc = "\":ta\" to the keyword at the mouse click" },
    { mode = "Visual", lhs = "<C-Right>", desc = "same as \"w\"" },
    { mode = "Visual", lhs = "<C-RightMouse>", desc = "same as \"CTRL-T\"" },
    { mode = "Visual", lhs = "<C-Tab>", desc = "same as \"g<Tab>\"" },
    { mode = "Visual", lhs = "[\"x]<Del>", desc = "same as \"x\"" },
    { mode = "Visual", lhs = "{count}<Del>", desc = "remove the last digit from {count}" },
    { mode = "Visual", lhs = "<Down>", desc = "same as \"j\"" },
    { mode = "Visual", lhs = "<End>", desc = "same as \"$\"" },
    { mode = "Visual", lhs = "<F1>", desc = "same as <Help>" },
    { mode = "Visual", lhs = "<Help>", desc = "open a help window" },
    { mode = "Visual", lhs = "<Home>", desc = "same as \"0\"" },
    { mode = "Visual", lhs = "<Insert>", desc = "same as \"i\"" },
    { mode = "Visual", lhs = "<Left>", desc = "same as \"h\"" },
    { mode = "Visual", lhs = "<LeftMouse>", desc = "move cursor to the mouse click position" },
    { mode = "Visual", lhs = "<MiddleMouse>", desc = "same as \"gP\" at the mouse click position" },
    { mode = "Visual", lhs = "<PageDown>", desc = "same as CTRL-F" },
    { mode = "Visual", lhs = "<PageUp>", desc = "same as CTRL-B" },
    { mode = "Visual", lhs = "<Right>", desc = "same as \"l\"" },
    { mode = "Visual", lhs = "<RightMouse>", desc = "start Visual mode, move cursor to the mouse" },
    { mode = "Visual", lhs = "<S-Down>", desc = "same as CTRL-F" },
    { mode = "Visual", lhs = "<S-Left>", desc = "same as \"b\"" },
    { mode = "Visual", lhs = "<S-LeftMouse>", desc = "same as \"*\" at the mouse click position" },
    { mode = "Visual", lhs = "<S-Right>", desc = "same as \"w\"" },
    { mode = "Visual", lhs = "<S-RightMouse>", desc = "same as \"#\" at the mouse click position" },
    { mode = "Visual", lhs = "<S-Up>", desc = "same as CTRL-B" },
    { mode = "Visual", lhs = "<Undo>", desc = "same as \"u\"" },
    { mode = "Visual", lhs = "<Up>", desc = "same as \"k\"" },
    { mode = "Visual", lhs = "a\"", desc = "double quoted string" },
    { mode = "Visual", lhs = "a'", desc = "single quoted string" },
    { mode = "Visual", lhs = "a(", desc = "same as ab" },
    { mode = "Visual", lhs = "a)", desc = "same as ab" },
    { mode = "Visual", lhs = "a<", desc = "\"a <>\" from '<' to the matching '>'" },
    { mode = "Visual", lhs = "a>", desc = "same as a<" },
    { mode = "Visual", lhs = "aB", desc = "\"a Block\" from `[{` to `]}` (with brackets)" },
    { mode = "Visual", lhs = "aW", desc = "\"a WORD\" (with white space)" },
    { mode = "Visual", lhs = "a[", desc = "\"a []\" from '[' to the matching ']'" },
    { mode = "Visual", lhs = "a]", desc = "same as a[" },
    { mode = "Visual", lhs = "a`", desc = "string in backticks" },
    { mode = "Visual", lhs = "ab", desc = "\"a block\" from \"[(\" to \"])\" (with braces)" },
    { mode = "Visual", lhs = "ap", desc = "\"a paragraph\" (with white space)" },
    { mode = "Visual", lhs = "as", desc = "\"a sentence\" (with white space)" },
    { mode = "Visual", lhs = "at", desc = "\"a tag block\" (with white space)" },
    { mode = "Visual", lhs = "aw", desc = "\"a word\" (with white space)" },
    { mode = "Visual", lhs = "a{", desc = "same as aB" },
    { mode = "Visual", lhs = "a}", desc = "same as aB" },
    { mode = "Visual", lhs = "i\"", desc = "double quoted string without the quotes" },
    { mode = "Visual", lhs = "i'", desc = "single quoted string without the quotes" },
    { mode = "Visual", lhs = "i(", desc = "same as ib" },
    { mode = "Visual", lhs = "i)", desc = "same as ib" },
    { mode = "Visual", lhs = "i<", desc = "\"inner <>\" from '<' to the matching '>'" },
    { mode = "Visual", lhs = "i>", desc = "same as i<" },
    { mode = "Visual", lhs = "iB", desc = "\"inner Block\" from `[{` and `]}`" },
    { mode = "Visual", lhs = "iW", desc = "\"inner WORD\"" },
    { mode = "Visual", lhs = "i[", desc = "\"inner []\" from '[' to the matching ']'" },
    { mode = "Visual", lhs = "i]", desc = "same as i[" },
    { mode = "Visual", lhs = "i`", desc = "string in backticks without the backticks" },
    { mode = "Visual", lhs = "ib", desc = "\"inner block\" from \"[(\" to \"])\"" },
    { mode = "Visual", lhs = "ip", desc = "\"inner paragraph\"" },
    { mode = "Visual", lhs = "is", desc = "\"inner sentence\"" },
    { mode = "Visual", lhs = "it", desc = "\"inner tag block\"" },
    { mode = "Visual", lhs = "iw", desc = "\"inner word\"" },
    { mode = "Visual", lhs = "i{", desc = "same as iB" },
    { mode = "Visual", lhs = "i}", desc = "same as iB" },
    { mode = "Normal", lhs = "CTRL-W CTRL-B", desc = "same as \"CTRL-W b\"" },
    { mode = "Normal", lhs = "CTRL-W CTRL-C", desc = "same as \"CTRL-W c\"" },
    { mode = "Normal", lhs = "CTRL-W CTRL-D", desc = "same as \"CTRL-W d\"" },
    { mode = "Normal", lhs = "CTRL-W CTRL-F", desc = "same as \"CTRL-W f\"" },
    { mode = "Normal", lhs = "CTRL-W CTRL-H", desc = "same as \"CTRL-W h\"" },
    { mode = "Normal", lhs = "CTRL-W CTRL-I", desc = "same as \"CTRL-W i\"" },
    { mode = "Normal", lhs = "CTRL-W CTRL-J", desc = "same as \"CTRL-W j\"" },
    { mode = "Normal", lhs = "CTRL-W CTRL-K", desc = "same as \"CTRL-W k\"" },
    { mode = "Normal", lhs = "CTRL-W CTRL-L", desc = "same as \"CTRL-W l\"" },
    { mode = "Normal", lhs = "CTRL-W CTRL-N", desc = "same as \"CTRL-W n\"" },
    { mode = "Normal", lhs = "CTRL-W CTRL-O", desc = "same as \"CTRL-W o\"" },
    { mode = "Normal", lhs = "CTRL-W CTRL-P", desc = "same as \"CTRL-W p\"" },
    { mode = "Normal", lhs = "CTRL-W CTRL-Q", desc = "same as \"CTRL-W q\"" },
    { mode = "Normal", lhs = "CTRL-W CTRL-R", desc = "same as \"CTRL-W r\"" },
    { mode = "Normal", lhs = "CTRL-W CTRL-S", desc = "same as \"CTRL-W s\"" },
    { mode = "Normal", lhs = "CTRL-W CTRL-T", desc = "same as \"CTRL-W t\"" },
    { mode = "Normal", lhs = "CTRL-W CTRL-V", desc = "same as \"CTRL-W v\"" },
    { mode = "Normal", lhs = "CTRL-W CTRL-W", desc = "same as \"CTRL-W w\"" },
    { mode = "Normal", lhs = "CTRL-W CTRL-X", desc = "same as \"CTRL-W x\"" },
    { mode = "Normal", lhs = "CTRL-W CTRL-Z", desc = "same as \"CTRL-W z\"" },
    { mode = "Normal", lhs = "CTRL-W CTRL-]", desc = "same as \"CTRL-W ]\"" },
    { mode = "Normal", lhs = "CTRL-W CTRL-^", desc = "same as \"CTRL-W ^\"" },
    { mode = "Normal", lhs = "CTRL-W CTRL-_", desc = "same as \"CTRL-W _\"" },
    { mode = "Normal", lhs = "CTRL-W +", desc = "increase current window height N lines" },
    { mode = "Normal", lhs = "CTRL-W -", desc = "decrease current window height N lines" },
    { mode = "Normal", lhs = "CTRL-W <", desc = "decrease current window width N columns" },
    { mode = "Normal", lhs = "CTRL-W =", desc = "make all windows the same height & width" },
    { mode = "Normal", lhs = "CTRL-W >", desc = "increase current window width N columns" },
    { mode = "Normal", lhs = "CTRL-W H", desc = "move current window to the far left" },
    { mode = "Normal", lhs = "CTRL-W J", desc = "move current window to the very bottom" },
    { mode = "Normal", lhs = "CTRL-W K", desc = "move current window to the very top" },
    { mode = "Normal", lhs = "CTRL-W L", desc = "move current window to the far right" },
    { mode = "Normal", lhs = "CTRL-W P", desc = "go to preview window" },
    { mode = "Normal", lhs = "CTRL-W R", desc = "rotate windows upwards N times" },
    { mode = "Normal", lhs = "CTRL-W S", desc = "same as \"CTRL-W s\"" },
    { mode = "Normal", lhs = "CTRL-W T", desc = "move current window to a new tab page" },
    { mode = "Normal", lhs = "CTRL-W W", desc = "go to N previous window (wrap around)" },
    { mode = "Normal", lhs = "CTRL-W ]", desc = "split window and jump to tag under cursor" },
    { mode = "Normal", lhs = "CTRL-W ^", desc = "split current window and edit alternate" },
    { mode = "Normal", lhs = "CTRL-W _", desc = "set current window height to N (default:" },
    { mode = "Normal", lhs = "CTRL-W b", desc = "go to bottom window" },
    { mode = "Normal", lhs = "CTRL-W c", desc = "close current window (like |:close|)" },
    { mode = "Normal", lhs = "CTRL-W d", desc = "split window and jump to definition under" },
    { mode = "Normal", lhs = "CTRL-W f", desc = "split window and edit file name under the" },
    { mode = "Normal", lhs = "CTRL-W F", desc = "split window and edit file name under the" },
    { mode = "Normal", lhs = "CTRL-W g ]", desc = "split window and do |:tselect| for tag" },
    { mode = "Normal", lhs = "CTRL-W g }", desc = "do a |:ptjump| to the tag under the cursor" },
    { mode = "Normal", lhs = "CTRL-W g f", desc = "edit file name under the cursor in a new" },
    { mode = "Normal", lhs = "CTRL-W g F", desc = "edit file name under the cursor in a new" },
    { mode = "Normal", lhs = "CTRL-W g t", desc = "same as `gt`: go to next tab page" },
    { mode = "Normal", lhs = "CTRL-W g T", desc = "same as `gT`: go to previous tab page" },
    { mode = "Normal", lhs = "CTRL-W g <Tab>", desc = "same as |g<Tab>|: go to last accessed tab" },
    { mode = "Normal", lhs = "CTRL-W h", desc = "go to Nth left window (stop at first window)" },
    { mode = "Normal", lhs = "CTRL-W i", desc = "split window and jump to declaration of" },
    { mode = "Normal", lhs = "CTRL-W j", desc = "go N windows down (stop at last window)" },
    { mode = "Normal", lhs = "CTRL-W k", desc = "go N windows up (stop at first window)" },
    { mode = "Normal", lhs = "CTRL-W l", desc = "go to Nth right window (stop at last window)" },
    { mode = "Normal", lhs = "CTRL-W n", desc = "open new window, N lines high" },
    { mode = "Normal", lhs = "CTRL-W o", desc = "close all but current window (like |:only|)" },
    { mode = "Normal", lhs = "CTRL-W p", desc = "go to previous (last accessed) window" },
    { mode = "Normal", lhs = "CTRL-W q", desc = "quit current window (like |:quit|)" },
    { mode = "Normal", lhs = "CTRL-W r", desc = "rotate windows downwards N times" },
    { mode = "Normal", lhs = "CTRL-W s", desc = "split current window in two parts, new" },
    { mode = "Normal", lhs = "CTRL-W t", desc = "go to top window" },
    { mode = "Normal", lhs = "CTRL-W v", desc = "split current window vertically, new window" },
    { mode = "Normal", lhs = "CTRL-W w", desc = "go to N next window (wrap around)" },
    { mode = "Normal", lhs = "CTRL-W x", desc = "exchange current window with window N" },
    { mode = "Normal", lhs = "CTRL-W z", desc = "close preview window" },
    { mode = "Normal", lhs = "CTRL-W |", desc = "set window width to N columns" },
    { mode = "Normal", lhs = "CTRL-W }", desc = "show tag under cursor in preview window" },
    { mode = "Normal", lhs = "CTRL-W <Down>", desc = "same as \"CTRL-W j\"" },
    { mode = "Normal", lhs = "CTRL-W <Up>", desc = "same as \"CTRL-W k\"" },
    { mode = "Normal", lhs = "CTRL-W <Left>", desc = "same as \"CTRL-W h\"" },
    { mode = "Normal", lhs = "CTRL-W <Right>", desc = "same as \"CTRL-W l\"" },
    { mode = "Normal", lhs = "[ CTRL-D", desc = "jump to first #define found in current and" },
    { mode = "Normal", lhs = "[ CTRL-I", desc = "jump to first line in current and included" },
    { mode = "Normal", lhs = "[#", desc = "cursor to N previous unmatched #if, #else" },
    { mode = "Normal", lhs = "['", desc = "cursor to previous lowercase mark, on first" },
    { mode = "Normal", lhs = "[(", desc = "cursor N times back to unmatched '('" },
    { mode = "Normal", lhs = "[*", desc = "same as \"[/\"" },
    { mode = "Normal", lhs = "[`", desc = "cursor to previous lowercase mark" },
    { mode = "Normal", lhs = "[/", desc = "cursor to N previous start of a C comment" },
    { mode = "Normal", lhs = "[D", desc = "list all defines found in current and" },
    { mode = "Normal", lhs = "[I", desc = "list all lines found in current and" },
    { mode = "Normal", lhs = "[P", desc = "same as \"[p\"" },
    { mode = "Normal", lhs = "[[", desc = "cursor N sections backward" },
    { mode = "Normal", lhs = "[]", desc = "cursor N SECTIONS backward" },
    { mode = "Normal", lhs = "[c", desc = "cursor N times backwards to start of change" },
    { mode = "Normal", lhs = "[d", desc = "show first #define found in current and" },
    { mode = "Normal", lhs = "[f", desc = "same as \"gf\"" },
    { mode = "Normal", lhs = "[i", desc = "show first line found in current and" },
    { mode = "Normal", lhs = "[m", desc = "cursor N times back to start of member" },
    { mode = "Normal", lhs = "[p", desc = "like \"P\", but adjust indent to current line" },
    { mode = "Normal", lhs = "[s", desc = "move to the previous misspelled word" },
    { mode = "Normal", lhs = "[z", desc = "move to start of open fold" },
    { mode = "Normal", lhs = "[{", desc = "cursor N times back to unmatched '{'" },
    { mode = "Normal", lhs = "[<MiddleMouse>", desc = "same as \"[p\"" },
    { mode = "Normal", lhs = "] CTRL-D", desc = "jump to first #define found in current and" },
    { mode = "Normal", lhs = "] CTRL-I", desc = "jump to first line in current and included" },
    { mode = "Normal", lhs = "]#", desc = "cursor to N next unmatched #endif or #else" },
    { mode = "Normal", lhs = "]'", desc = "cursor to next lowercase mark, on first" },
    { mode = "Normal", lhs = "])", desc = "cursor N times forward to unmatched ')'" },
    { mode = "Normal", lhs = "]*", desc = "same as \"]/\"" },
    { mode = "Normal", lhs = "]`", desc = "cursor to next lowercase mark" },
    { mode = "Normal", lhs = "]/", desc = "cursor to N next end of a C comment" },
    { mode = "Normal", lhs = "]D", desc = "list all #defines found in current and" },
    { mode = "Normal", lhs = "]I", desc = "list all lines found in current and" },
    { mode = "Normal", lhs = "]P", desc = "same as \"[p\"" },
    { mode = "Normal", lhs = "][", desc = "cursor N SECTIONS forward" },
    { mode = "Normal", lhs = "]]", desc = "cursor N sections forward" },
    { mode = "Normal", lhs = "]c", desc = "cursor N times forward to start of change" },
    { mode = "Normal", lhs = "]d", desc = "show first #define found in current and" },
    { mode = "Normal", lhs = "]f", desc = "same as \"gf\"" },
    { mode = "Normal", lhs = "]i", desc = "show first line found in current and" },
    { mode = "Normal", lhs = "]m", desc = "cursor N times forward to end of member" },
    { mode = "Normal", lhs = "]p", desc = "like \"p\", but adjust indent to current line" },
    { mode = "Normal", lhs = "]s", desc = "move to next misspelled word" },
    { mode = "Normal", lhs = "]z", desc = "move to end of open fold" },
    { mode = "Normal", lhs = "]}", desc = "cursor N times forward to unmatched '}'" },
    { mode = "Normal", lhs = "]<MiddleMouse>", desc = "same as \"]p\"" },
    { mode = "Normal", lhs = "g CTRL-G", desc = "show information about current cursor" },
    { mode = "Normal", lhs = "g CTRL-H", desc = "start Select block mode" },
    { mode = "Normal", lhs = "g CTRL-]", desc = "|:tjump| to the tag under the cursor" },
    { mode = "Normal", lhs = "g#", desc = "like \"#\", but without using \"\\<\" and \"\\>\"" },
    { mode = "Normal", lhs = "g$", desc = "when 'wrap' off go to rightmost character of" },
    { mode = "Normal", lhs = "g&", desc = "repeat last \":s\" on all lines" },
    { mode = "Normal", lhs = "g'{mark}", desc = "like |'| but without changing the jumplist" },
    { mode = "Normal", lhs = "g`{mark}", desc = "like |`| but without changing the jumplist" },
    { mode = "Normal", lhs = "g*", desc = "like \"*\", but without using \"\\<\" and \"\\>\"" },
    { mode = "Normal", lhs = "g+", desc = "go to newer text state N times" },
    { mode = "Normal", lhs = "g,", desc = "go to N newer position in change list" },
    { mode = "Normal", lhs = "g-", desc = "go to older text state N times" },
    { mode = "Normal", lhs = "g0", desc = "when 'wrap' off go to leftmost character of" },
    { mode = "Normal", lhs = "g8", desc = "print hex value of bytes used in UTF-8" },
    { mode = "Normal", lhs = "g;", desc = "go to N older position in change list" },
    { mode = "Normal", lhs = "g<", desc = "display previous command output" },
    { mode = "Normal", lhs = "g?", desc = "Rot13 encoding operator" },
    { mode = "Normal", lhs = "g??", desc = "Rot13 encode current line" },
    { mode = "Normal", lhs = "g?g?", desc = "Rot13 encode current line" },
    { mode = "Normal", lhs = "gD", desc = "go to definition of word under the cursor" },
    { mode = "Normal", lhs = "gE", desc = "go backwards to the end of the previous" },
    { mode = "Normal", lhs = "gH", desc = "start Select line mode" },
    { mode = "Normal", lhs = "gI", desc = "like \"I\", but always start in column 1" },
    { mode = "Normal", lhs = "gJ", desc = "join lines without inserting space" },
    { mode = "Normal", lhs = "gN", desc = "1,2  find the previous match with the last used" },
    { mode = "Normal", lhs = "[\"x]gP", desc = "put the text [from register x] before the" },
    { mode = "Normal", lhs = "gQ", desc = "switch to \"Ex\" mode with Vim editing" },
    { mode = "Normal", lhs = "gR", desc = "enter Virtual Replace mode" },
    { mode = "Normal", lhs = "gT", desc = "go to the previous tab page" },
    { mode = "Normal", lhs = "gU{motion}", desc = "make Nmove text uppercase" },
    { mode = "Normal", lhs = "gV", desc = "don't reselect the previous Visual area" },
    { mode = "Normal", lhs = "g]", desc = ":tselect on the tag under the cursor" },
    { mode = "Normal", lhs = "g^", desc = "when 'wrap' off go to leftmost non-white" },
    { mode = "Normal", lhs = "g_", desc = "cursor to the last CHAR N - 1 lines lower" },
    { mode = "Normal", lhs = "ga", desc = "print ascii value of character under the" },
    { mode = "Normal", lhs = "gd", desc = "go to definition of word under the cursor" },
    { mode = "Normal", lhs = "ge", desc = "go backwards to the end of the previous" },
    { mode = "Normal", lhs = "gf", desc = "start editing the file whose name is under" },
    { mode = "Normal", lhs = "gF", desc = "start editing the file whose name is under" },
    { mode = "Normal", lhs = "gg", desc = "cursor to line N, default first line" },
    { mode = "Normal", lhs = "gh", desc = "start Select mode" },
    { mode = "Normal", lhs = "gi", desc = "like \"i\", but first move to the |'^| mark" },
    { mode = "Normal", lhs = "gj", desc = "like \"j\", but when 'wrap' on go N screen" },
    { mode = "Normal", lhs = "gk", desc = "like \"k\", but when 'wrap' on go N screen" },
    { mode = "Normal", lhs = "gm", desc = "go to character at middle of the screenline" },
    { mode = "Normal", lhs = "gM", desc = "go to character at middle of the text line" },
    { mode = "Normal", lhs = "gn", desc = "1,2  find the next match with the last used" },
    { mode = "Normal", lhs = "go", desc = "cursor to byte N in the buffer" },
    { mode = "Normal", lhs = "[\"x]gp", desc = "put the text [from register x] after the" },
    { mode = "Normal", lhs = "gq{motion}", desc = "format Nmove text" },
    { mode = "Normal", lhs = "gr{char}", desc = "virtual replace N chars with {char}" },
    { mode = "Normal", lhs = "gs", desc = "go to sleep for N seconds (default 1)" },
    { mode = "Normal", lhs = "gt", desc = "go to the next tab page" },
    { mode = "Normal", lhs = "gu{motion}", desc = "make Nmove text lowercase" },
    { mode = "Normal", lhs = "gv", desc = "reselect the previous Visual area" },
    { mode = "Normal", lhs = "gw{motion}", desc = "format Nmove text and keep cursor" },
    { mode = "Normal", lhs = "gx", desc = "execute application for file name under the" },
    { mode = "Normal", lhs = "g@{motion}", desc = "call 'operatorfunc'" },
    { mode = "Normal", lhs = "g~{motion}", desc = "swap case for Nmove text" },
    { mode = "Normal", lhs = "g<Down>", desc = "same as \"gj\"" },
    { mode = "Normal", lhs = "g<End>", desc = "same as \"g$\"" },
    { mode = "Normal", lhs = "g<Home>", desc = "same as \"g0\"" },
    { mode = "Normal", lhs = "g<LeftMouse>", desc = "same as <C-LeftMouse>" },
    { mode = "Normal", lhs = "g<RightMouse>", desc = "same as <C-RightMouse>" },
    { mode = "Normal", lhs = "g<Tab>", desc = "go to last accessed tab page" },
    { mode = "Normal", lhs = "g<Up>", desc = "same as \"gk\"" },
    { mode = "Normal", lhs = "z<CR>", desc = "redraw, cursor line to top of window," },
    { mode = "Normal", lhs = "z{height}<CR>", desc = "redraw, make window {height} lines high" },
    { mode = "Normal", lhs = "z+", desc = "cursor on line N (default line below" },
    { mode = "Normal", lhs = "z-", desc = "redraw, cursor line at bottom of window," },
    { mode = "Normal", lhs = "z.", desc = "redraw, cursor line to center of window," },
    { mode = "Normal", lhs = "z=", desc = "give spelling suggestions" },
    { mode = "Normal", lhs = "zA", desc = "open a closed fold or close an open fold" },
    { mode = "Normal", lhs = "zC", desc = "close folds recursively" },
    { mode = "Normal", lhs = "zD", desc = "delete folds recursively" },
    { mode = "Normal", lhs = "zE", desc = "eliminate all folds" },
    { mode = "Normal", lhs = "zF", desc = "create a fold for N lines" },
    { mode = "Normal", lhs = "zG", desc = "temporarily mark word as correctly spelled" },
    { mode = "Normal", lhs = "zH", desc = "when 'wrap' off scroll half a screenwidth" },
    { mode = "Normal", lhs = "zL", desc = "when 'wrap' off scroll half a screenwidth" },
    { mode = "Normal", lhs = "zM", desc = "set 'foldlevel' to zero" },
    { mode = "Normal", lhs = "zN", desc = "set 'foldenable'" },
    { mode = "Normal", lhs = "zO", desc = "open folds recursively" },
    { mode = "Normal", lhs = "zR", desc = "set 'foldlevel' to the deepest fold" },
    { mode = "Normal", lhs = "zW", desc = "temporarily mark word as incorrectly spelled" },
    { mode = "Normal", lhs = "zX", desc = "re-apply 'foldlevel'" },
    { mode = "Normal", lhs = "z^", desc = "cursor on line N (default line above" },
    { mode = "Normal", lhs = "za", desc = "open a closed fold, close an open fold" },
    { mode = "Normal", lhs = "zb", desc = "redraw, cursor line at bottom of window" },
    { mode = "Normal", lhs = "zc", desc = "close a fold" },
    { mode = "Normal", lhs = "zd", desc = "delete a fold" },
    { mode = "Normal", lhs = "ze", desc = "when 'wrap' off scroll horizontally to" },
    { mode = "Normal", lhs = "zf{motion}", desc = "create a fold for Nmove text" },
    { mode = "Normal", lhs = "zg", desc = "permanently mark word as correctly spelled" },
    { mode = "Normal", lhs = "zh", desc = "when 'wrap' off scroll screen N characters" },
    { mode = "Normal", lhs = "zi", desc = "toggle 'foldenable'" },
    { mode = "Normal", lhs = "zj", desc = "move to the start of the next fold" },
    { mode = "Normal", lhs = "zk", desc = "move to the end of the previous fold" },
    { mode = "Normal", lhs = "zl", desc = "when 'wrap' off scroll screen N characters" },
    { mode = "Normal", lhs = "zm", desc = "subtract one from 'foldlevel'" },
    { mode = "Normal", lhs = "zn", desc = "reset 'foldenable'" },
    { mode = "Normal", lhs = "zo", desc = "open fold" },
    { mode = "Normal", lhs = "zp", desc = "paste in block-mode without trailing spaces" },
    { mode = "Normal", lhs = "zP", desc = "paste in block-mode without trailing spaces" },
    { mode = "Normal", lhs = "zr", desc = "add one to 'foldlevel'" },
    { mode = "Normal", lhs = "zs", desc = "when 'wrap' off scroll horizontally to" },
    { mode = "Normal", lhs = "zt", desc = "redraw, cursor line at top of window" },
    { mode = "Normal", lhs = "zuw", desc = "undo |zw|" },
    { mode = "Normal", lhs = "zug", desc = "undo |zg|" },
    { mode = "Normal", lhs = "zuW", desc = "undo |zW|" },
    { mode = "Normal", lhs = "zuG", desc = "undo |zG|" },
    { mode = "Normal", lhs = "zv", desc = "open enough folds to view the cursor line" },
    { mode = "Normal", lhs = "zw", desc = "permanently mark word as incorrectly spelled" },
    { mode = "Normal", lhs = "zx", desc = "re-apply 'foldlevel' and do \"zv\"" },
    { mode = "Normal", lhs = "zy", desc = "yank without trailing spaces" },
    { mode = "Normal", lhs = "zz", desc = "redraw, cursor line at center of window" },
    { mode = "Normal", lhs = "z<Left>", desc = "same as \"zh\"" },
    { mode = "Normal", lhs = "z<Right>", desc = "same as \"zl\"" },
    { mode = "Normal", lhs = "v", desc = "force operator to work charwise" },
    { mode = "Normal", lhs = "V", desc = "force operator to work linewise" },
    { mode = "Normal", lhs = "CTRL-V", desc = "force operator to work blockwise" },
    { mode = "Visual", lhs = "CTRL-\\ CTRL-N", desc = "stop Visual mode" },
    { mode = "Normal", lhs = "CTRL-\\ CTRL-G", desc = "go to Normal mode" },
    { mode = "Normal", lhs = "CTRL-A", desc = "add N to number in highlighted text" },
    { mode = "Visual", lhs = "CTRL-C", desc = "stop Visual mode" },
    { mode = "Visual", lhs = "CTRL-G", desc = "toggle between Visual mode and Select mode" },
    { mode = "Visual", lhs = "<BS>", desc = "Select mode: delete highlighted area" },
    { mode = "Visual", lhs = "CTRL-H", desc = "same as <BS>" },
    { mode = "Visual", lhs = "CTRL-O", desc = "switch from Select to Visual mode for one" },
    { mode = "Visual", lhs = "CTRL-V", desc = "make Visual mode blockwise or stop Visual" },
    { mode = "Visual", lhs = "CTRL-X", desc = "subtract N from number in highlighted text" },
    { mode = "Visual", lhs = "<Esc>", desc = "stop Visual mode" },
    { mode = "Visual", lhs = "CTRL-]", desc = "jump to highlighted tag" },
    { mode = "Visual", lhs = "!{filter}", desc = "filter the highlighted lines through the" },
    { mode = "Visual", lhs = ":", desc = "start a command-line with the highlighted" },
    { mode = "Visual", lhs = "<", desc = "shift the highlighted lines one" },
    { mode = "Visual", lhs = "=", desc = "filter the highlighted lines through the" },
    { mode = "Visual", lhs = ">", desc = "shift the highlighted lines one" },
    { mode = "Visual", lhs = "A", desc = "block mode: append same text in all lines," },
    { mode = "Visual", lhs = "C", desc = "delete the highlighted lines and start" },
    { mode = "Visual", lhs = "D", desc = "delete the highlighted lines" },
    { mode = "Visual", lhs = "I", desc = "block mode: insert same text in all lines," },
    { mode = "Visual", lhs = "J", desc = "join the highlighted lines" },
    { mode = "Visual", lhs = "K", desc = "run 'keywordprg' on the highlighted area" },
    { mode = "Visual", lhs = "O", desc = "move horizontally to other corner of area" },
    { mode = "Visual", lhs = "P", desc = "replace highlighted area with register" },
    { mode = "Visual", lhs = "R", desc = "delete the highlighted lines and start" },
    { mode = "Visual", lhs = "S", desc = "delete the highlighted lines and start" },
    { mode = "Visual", lhs = "U", desc = "make highlighted area uppercase" },
    { mode = "Visual", lhs = "V", desc = "make Visual mode linewise or stop Visual" },
    { mode = "Visual", lhs = "X", desc = "delete the highlighted lines" },
    { mode = "Visual", lhs = "Y", desc = "yank the highlighted lines" },
    { mode = "Visual", lhs = "a\"", desc = "extend highlighted area with a double" },
    { mode = "Visual", lhs = "a'", desc = "extend highlighted area with a single" },
    { mode = "Visual", lhs = "a(", desc = "same as ab" },
    { mode = "Visual", lhs = "a)", desc = "same as ab" },
    { mode = "Visual", lhs = "a<", desc = "extend highlighted area with a <> block" },
    { mode = "Visual", lhs = "a>", desc = "same as a<" },
    { mode = "Visual", lhs = "aB", desc = "extend highlighted area with a {} block" },
    { mode = "Visual", lhs = "aW", desc = "extend highlighted area with \"a WORD\"" },
    { mode = "Visual", lhs = "a[", desc = "extend highlighted area with a [] block" },
    { mode = "Visual", lhs = "a]", desc = "same as a[" },
    { mode = "Visual", lhs = "a`", desc = "extend highlighted area with a backtick" },
    { mode = "Visual", lhs = "ab", desc = "extend highlighted area with a () block" },
    { mode = "Visual", lhs = "ap", desc = "extend highlighted area with a paragraph" },
    { mode = "Visual", lhs = "as", desc = "extend highlighted area with a sentence" },
    { mode = "Visual", lhs = "at", desc = "extend highlighted area with a tag block" },
    { mode = "Visual", lhs = "aw", desc = "extend highlighted area with \"a word\"" },
    { mode = "Visual", lhs = "a{", desc = "same as aB" },
    { mode = "Visual", lhs = "a}", desc = "same as aB" },
    { mode = "Visual", lhs = "c", desc = "delete highlighted area and start insert" },
    { mode = "Visual", lhs = "d", desc = "delete highlighted area" },
    { mode = "Visual", lhs = "g CTRL-A", desc = "add N to number in highlighted text" },
    { mode = "Visual", lhs = "g CTRL-X", desc = "subtract N from number in highlighted text" },
    { mode = "Visual", lhs = "gJ", desc = "join the highlighted lines without" },
    { mode = "Visual", lhs = "gq", desc = "format the highlighted lines" },
    { mode = "Visual", lhs = "gv", desc = "exchange current and previous highlighted" },
    { mode = "Visual", lhs = "i\"", desc = "extend highlighted area with a double" },
    { mode = "Visual", lhs = "i'", desc = "extend highlighted area with a single" },
    { mode = "Visual", lhs = "i(", desc = "same as ib" },
    { mode = "Visual", lhs = "i)", desc = "same as ib" },
    { mode = "Visual", lhs = "i<", desc = "extend highlighted area with inner <> block" },
    { mode = "Visual", lhs = "i>", desc = "same as i<" },
    { mode = "Visual", lhs = "iB", desc = "extend highlighted area with inner {} block" },
    { mode = "Visual", lhs = "iW", desc = "extend highlighted area with \"inner WORD\"" },
    { mode = "Visual", lhs = "i[", desc = "extend highlighted area with inner [] block" },
    { mode = "Visual", lhs = "i]", desc = "same as i[" },
    { mode = "Visual", lhs = "i`", desc = "extend highlighted area with a backtick" },
    { mode = "Visual", lhs = "ib", desc = "extend highlighted area with inner () block" },
    { mode = "Visual", lhs = "ip", desc = "extend highlighted area with inner paragraph" },
    { mode = "Visual", lhs = "is", desc = "extend highlighted area with inner sentence" },
    { mode = "Visual", lhs = "it", desc = "extend highlighted area with inner tag block" },
    { mode = "Visual", lhs = "iw", desc = "extend highlighted area with \"inner word\"" },
    { mode = "Visual", lhs = "i{", desc = "same as iB" },
    { mode = "Visual", lhs = "i}", desc = "same as iB" },
    { mode = "Visual", lhs = "o", desc = "move cursor to other corner of area" },
    { mode = "Visual", lhs = "p", desc = "replace highlighted area with register" },
    { mode = "Visual", lhs = "r", desc = "replace highlighted area with a character" },
    { mode = "Visual", lhs = "s", desc = "delete highlighted area and start insert" },
    { mode = "Visual", lhs = "u", desc = "make highlighted area lowercase" },
    { mode = "Visual", lhs = "v", desc = "make Visual mode charwise or stop" },
    { mode = "Visual", lhs = "x", desc = "delete the highlighted area" },
    { mode = "Visual", lhs = "y", desc = "yank the highlighted area" },
    { mode = "Visual", lhs = "~", desc = "swap case for the highlighted area" },
    { mode = "Command-line", lhs = "CTRL-A", desc = "do completion on the pattern in front of the" },
    { mode = "Command-line", lhs = "CTRL-B", desc = "cursor to begin of command-line" },
    { mode = "Command-line", lhs = "CTRL-C", desc = "same as <Esc>" },
    { mode = "Command-line", lhs = "CTRL-D", desc = "list completions that match the pattern in" },
    { mode = "Command-line", lhs = "CTRL-E", desc = "cursor to end of command-line" },
    { mode = "Command-line", lhs = "CTRL-F", desc = "default value for 'cedit': opens the" },
    { mode = "Command-line", lhs = "CTRL-G", desc = "next match when 'incsearch' is active" },
    { mode = "Command-line", lhs = "<BS>", desc = "delete the character in front of the cursor" },
    { mode = "Command-line", lhs = "CTRL-H", desc = "same as <BS>" },
    { mode = "Command-line", lhs = "<Tab>", desc = "if 'wildchar' is <Tab>: Do completion on" },
    { mode = "Command-line", lhs = "<S-Tab>", desc = "same as CTRL-P" },
    { mode = "Command-line", lhs = "'wildchar'", desc = "Do completion on the pattern in front of the" },
    { mode = "Command-line", lhs = "CTRL-I", desc = "same as <Tab>" },
    { mode = "Command-line", lhs = "<NL>", desc = "same as <CR>" },
    { mode = "Command-line", lhs = "CTRL-J", desc = "same as <CR>" },
    { mode = "Command-line", lhs = "CTRL-L", desc = "do completion on the pattern in front of the" },
    { mode = "Command-line", lhs = "<CR>", desc = "execute entered command" },
    { mode = "Command-line", lhs = "CTRL-M", desc = "same as <CR>" },
    { mode = "Command-line", lhs = "CTRL-N", desc = "after using 'wildchar' with multiple matches:" },
    { mode = "Command-line", lhs = "CTRL-P", desc = "after using 'wildchar' with multiple matches:" },
    { mode = "Command-line", lhs = "CTRL-Q", desc = "same as CTRL-V, unless it's used for terminal" },
    { mode = "Command-line", lhs = "CTRL-T", desc = "previous match when 'incsearch' is active" },
    { mode = "Command-line", lhs = "CTRL-U", desc = "remove all characters" },
    { mode = "Command-line", lhs = "CTRL-V", desc = "insert next non-digit literally, insert three" },
    { mode = "Command-line", lhs = "CTRL-W", desc = "delete the word in front of the cursor" },
    { mode = "Command-line", lhs = "<Esc>", desc = "abandon command-line without executing it" },
    { mode = "Command-line", lhs = "CTRL-[", desc = "same as <Esc>" },
    { mode = "Normal", lhs = "CTRL-\\ CTRL-N", desc = "go to Normal mode, abandon command-line" },
    { mode = "Normal", lhs = "CTRL-\\ CTRL-G", desc = "go to Normal mode, abandon command-line" },
    { mode = "Normal", lhs = "CTRL-]", desc = "trigger abbreviation" },
    { mode = "Normal", lhs = "CTRL-^", desc = "toggle use of |:lmap| mappings" },
    { mode = "Normal", lhs = "<Del>", desc = "delete the character under the cursor" },
    { mode = "Normal", lhs = "<Left>", desc = "cursor left" },
    { mode = "Normal", lhs = "<S-Left>", desc = "cursor one word left" },
    { mode = "Normal", lhs = "<C-Left>", desc = "cursor one word left" },
    { mode = "Normal", lhs = "<Right>", desc = "cursor right" },
    { mode = "Normal", lhs = "<S-Right>", desc = "cursor one word right" },
    { mode = "Normal", lhs = "<C-Right>", desc = "cursor one word right" },
    { mode = "Normal", lhs = "<Up>", desc = "recall previous command-line from history that" },
    { mode = "Normal", lhs = "<S-Up>", desc = "recall previous command-line from history" },
    { mode = "Normal", lhs = "<Down>", desc = "recall next command-line from history that" },
    { mode = "Normal", lhs = "<S-Down>", desc = "recall next command-line from history" },
    { mode = "Normal", lhs = "<Home>", desc = "cursor to start of command-line" },
    { mode = "Normal", lhs = "<End>", desc = "cursor to end of command-line" },
    { mode = "Normal", lhs = "<PageDown>", desc = "same as <S-Down>" },
    { mode = "Normal", lhs = "<PageUp>", desc = "same as <S-Up>" },
    { mode = "Normal", lhs = "<Insert>", desc = "toggle insert/overstrike mode" },
    { mode = "Normal", lhs = "<LeftMouse>", desc = "cursor at mouse click" },
    { mode = "EX", lhs = ":", desc = "nothing" },
    { mode = "EX", lhs = ":{range}", desc = "go to last line in {range}" },
    { mode = "EX", lhs = ":!", desc = "filter lines or execute an external command" },
    { mode = "EX", lhs = ":!!", desc = "repeat last \":!\" command" },
    { mode = "EX", lhs = ":#", desc = "same as \":number\"" },
    { mode = "EX", lhs = ":&", desc = "repeat last \":substitute\"" },
    { mode = "EX", lhs = ":*", desc = "use the last Visual area, like \":'<,'>\"" },
    { mode = "EX", lhs = ":<", desc = "shift lines one 'shiftwidth' left" },
    { mode = "EX", lhs = ":=", desc = "print the last line number" },
    { mode = "EX", lhs = ":>", desc = "shift lines one 'shiftwidth' right" },
    { mode = "EX", lhs = ":@", desc = "execute contents of a register" },
    { mode = "EX", lhs = ":@@", desc = "repeat the previous \":@\"" },
    { mode = "EX", lhs = ":2mat[ch]", desc = "define a second match to highlight" },
    { mode = "EX", lhs = ":3mat[ch]", desc = "define a third match to highlight" },
    { mode = "EX", lhs = ":N[ext]", desc = "go to previous file in the argument list" },
    { mode = "EX", lhs = ":a[ppend]", desc = "append text" },
    { mode = "EX", lhs = ":ab[breviate]", desc = "enter abbreviation" },
    { mode = "EX", lhs = ":abc[lear]", desc = "remove all abbreviations" },
    { mode = "EX", lhs = ":abo[veleft]", desc = "make split window appear left or above" },
    { mode = "EX", lhs = ":al[l]", desc = "open a window for each file in the argument" },
    { mode = "EX", lhs = ":am[enu]", desc = "enter new menu item for all modes" },
    { mode = "EX", lhs = ":an[oremenu]", desc = "enter a new menu for all modes that will not" },
    { mode = "EX", lhs = ":ar[gs]", desc = "print the argument list" },
    { mode = "EX", lhs = ":arga[dd]", desc = "add items to the argument list" },
    { mode = "EX", lhs = ":argded[upe]", desc = "remove duplicates from the argument list" },
    { mode = "EX", lhs = ":argd[elete]", desc = "delete items from the argument list" },
    { mode = "EX", lhs = ":arge[dit]", desc = "add item to the argument list and edit it" },
    { mode = "EX", lhs = ":argdo", desc = "do a command on all items in the argument list" },
    { mode = "EX", lhs = ":argg[lobal]", desc = "define the global argument list" },
    { mode = "EX", lhs = ":argl[ocal]", desc = "define a local argument list" },
    { mode = "EX", lhs = ":argu[ment]", desc = "go to specific file in the argument list" },
    { mode = "EX", lhs = ":as[cii]", desc = "print ascii value of character under the cursor" },
    { mode = "EX", lhs = ":au[tocmd]", desc = "enter or show autocommands" },
    { mode = "EX", lhs = ":aug[roup]", desc = "select the autocommand group to use" },
    { mode = "EX", lhs = ":aun[menu]", desc = "remove menu for all modes" },
    { mode = "EX", lhs = ":b[uffer]", desc = "go to specific buffer in the buffer list" },
    { mode = "EX", lhs = ":bN[ext]", desc = "go to previous buffer in the buffer list" },
    { mode = "EX", lhs = ":ba[ll]", desc = "open a window for each buffer in the buffer list" },
    { mode = "EX", lhs = ":bad[d]", desc = "add buffer to the buffer list" },
    { mode = "EX", lhs = ":balt", desc = "like \":badd\" but also set the alternate file" },
    { mode = "EX", lhs = ":bd[elete]", desc = "remove a buffer from the buffer list" },
    { mode = "EX", lhs = ":bel[owright]", desc = "make split window appear right or below" },
    { mode = "EX", lhs = ":bf[irst]", desc = "go to first buffer in the buffer list" },
    { mode = "EX", lhs = ":bl[ast]", desc = "go to last buffer in the buffer list" },
    { mode = "EX", lhs = ":bm[odified]", desc = "go to next buffer in the buffer list that has" },
    { mode = "EX", lhs = ":bn[ext]", desc = "go to next buffer in the buffer list" },
    { mode = "EX", lhs = ":bo[tright]", desc = "make split window appear at bottom or far right" },
    { mode = "EX", lhs = ":bp[revious]", desc = "go to previous buffer in the buffer list" },
    { mode = "EX", lhs = ":br[ewind]", desc = "go to first buffer in the buffer list" },
    { mode = "EX", lhs = ":brea[k]", desc = "break out of while loop" },
    { mode = "EX", lhs = ":breaka[dd]", desc = "add a debugger breakpoint" },
    { mode = "EX", lhs = ":breakd[el]", desc = "delete a debugger breakpoint" },
    { mode = "EX", lhs = ":breakl[ist]", desc = "list debugger breakpoints" },
    { mode = "EX", lhs = ":bro[wse]", desc = "use file selection dialog" },
    { mode = "EX", lhs = ":bufdo", desc = "execute command in each listed buffer" },
    { mode = "EX", lhs = ":buffers", desc = "list all files in the buffer list" },
    { mode = "EX", lhs = ":bun[load]", desc = "unload a specific buffer" },
    { mode = "EX", lhs = ":bw[ipeout]", desc = "really delete a buffer" },
    { mode = "EX", lhs = ":c[hange]", desc = "replace a line or series of lines" },
    { mode = "EX", lhs = ":cN[ext]", desc = "go to previous error" },
    { mode = "EX", lhs = ":cNf[ile]", desc = "go to last error in previous file" },
    { mode = "EX", lhs = ":ca[bbrev]", desc = "like \":abbreviate\" but for Command-line mode" },
    { mode = "EX", lhs = ":cabc[lear]", desc = "clear all abbreviations for Command-line mode" },
    { mode = "EX", lhs = ":cabo[ve]", desc = "go to error above current line" },
    { mode = "EX", lhs = ":cad[dbuffer]", desc = "add errors from buffer" },
    { mode = "EX", lhs = ":cadde[xpr]", desc = "add errors from expr" },
    { mode = "EX", lhs = ":caddf[ile]", desc = "add error message to current quickfix list" },
    { mode = "EX", lhs = ":caf[ter]", desc = "go to error after current cursor" },
    { mode = "EX", lhs = ":cal[l]", desc = "call a function" },
    { mode = "EX", lhs = ":cat[ch]", desc = "part of a :try command" },
    { mode = "EX", lhs = ":cbef[ore]", desc = "go to error before current cursor" },
    { mode = "EX", lhs = ":cbel[ow]", desc = "go to error below current line" },
    { mode = "EX", lhs = ":cbo[ttom]", desc = "scroll to the bottom of the quickfix window" },
    { mode = "EX", lhs = ":cb[uffer]", desc = "parse error messages and jump to first error" },
    { mode = "EX", lhs = ":cc", desc = "go to specific error" },
    { mode = "EX", lhs = ":ccl[ose]", desc = "close quickfix window" },
    { mode = "EX", lhs = ":cd", desc = "change directory" },
    { mode = "EX", lhs = ":cdo", desc = "execute command in each valid error list entry" },
    { mode = "EX", lhs = ":cfd[o]", desc = "execute command in each file in error list" },
    { mode = "EX", lhs = ":ce[nter]", desc = "format lines at the center" },
    { mode = "EX", lhs = ":cex[pr]", desc = "read errors from expr and jump to first" },
    { mode = "EX", lhs = ":cf[ile]", desc = "read file with error messages and jump to first" },
    { mode = "EX", lhs = ":cfir[st]", desc = "go to the specified error, default first one" },
    { mode = "EX", lhs = ":cgetb[uffer]", desc = "get errors from buffer" },
    { mode = "EX", lhs = ":cgete[xpr]", desc = "get errors from expr" },
    { mode = "EX", lhs = ":cg[etfile]", desc = "read file with error messages" },
    { mode = "EX", lhs = ":changes", desc = "print the change list" },
    { mode = "EX", lhs = ":chd[ir]", desc = "change directory" },
    { mode = "EX", lhs = ":che[ckhealth]", desc = "run healthchecks" },
    { mode = "EX", lhs = ":checkp[ath]", desc = "list included files" },
    { mode = "EX", lhs = ":checkt[ime]", desc = "check timestamp of loaded buffers" },
    { mode = "EX", lhs = ":chi[story]", desc = "list the error lists" },
    { mode = "EX", lhs = ":cla[st]", desc = "go to the specified error, default last one" },
    { mode = "EX", lhs = ":cle[arjumps]", desc = "clear the jump list" },
    { mode = "EX", lhs = ":cl[ist]", desc = "list all errors" },
    { mode = "EX", lhs = ":clo[se]", desc = "close current window" },
    { mode = "EX", lhs = ":cm[ap]", desc = "like \":map\" but for Command-line mode" },
    { mode = "EX", lhs = ":cmapc[lear]", desc = "clear all mappings for Command-line mode" },
    { mode = "EX", lhs = ":cme[nu]", desc = "add menu for Command-line mode" },
    { mode = "EX", lhs = ":cn[ext]", desc = "go to next error" },
    { mode = "EX", lhs = ":cnew[er]", desc = "go to newer error list" },
    { mode = "EX", lhs = ":cnf[ile]", desc = "go to first error in next file" },
    { mode = "EX", lhs = ":cno[remap]", desc = "like \":noremap\" but for Command-line mode" },
    { mode = "EX", lhs = ":cnorea[bbrev]", desc = "like \":noreabbrev\" but for Command-line mode" },
    { mode = "EX", lhs = ":cnoreme[nu]", desc = "like \":noremenu\" but for Command-line mode" },
    { mode = "EX", lhs = ":co[py]", desc = "copy lines" },
    { mode = "EX", lhs = ":col[der]", desc = "go to older error list" },
    { mode = "EX", lhs = ":colo[rscheme]", desc = "load a specific color scheme" },
    { mode = "EX", lhs = ":com[mand]", desc = "create user-defined command" },
    { mode = "EX", lhs = ":comc[lear]", desc = "clear all user-defined commands" },
    { mode = "EX", lhs = ":comp[iler]", desc = "do settings for a specific compiler" },
    { mode = "EX", lhs = ":con[tinue]", desc = "go back to :while" },
    { mode = "EX", lhs = ":conf[irm]", desc = "prompt user when confirmation required" },
    { mode = "EX", lhs = ":cons[t]", desc = "create a variable as a constant" },
    { mode = "EX", lhs = ":cope[n]", desc = "open quickfix window" },
    { mode = "EX", lhs = ":cp[revious]", desc = "go to previous error" },
    { mode = "EX", lhs = ":cpf[ile]", desc = "go to last error in previous file" },
    { mode = "EX", lhs = ":cq[uit]", desc = "quit Vim with an error code" },
    { mode = "EX", lhs = ":cr[ewind]", desc = "go to the specified error, default first one" },
    { mode = "EX", lhs = ":cu[nmap]", desc = "like \":unmap\" but for Command-line mode" },
    { mode = "EX", lhs = ":cuna[bbrev]", desc = "like \":unabbrev\" but for Command-line mode" },
    { mode = "EX", lhs = ":cunme[nu]", desc = "remove menu for Command-line mode" },
    { mode = "EX", lhs = ":cw[indow]", desc = "open or close quickfix window" },
    { mode = "EX", lhs = ":d[elete]", desc = "delete lines" },
    { mode = "EX", lhs = ":deb[ug]", desc = "run a command in debugging mode" },
    { mode = "EX", lhs = ":debugg[reedy]", desc = "read debug mode commands from normal input" },
    { mode = "EX", lhs = ":delc[ommand]", desc = "delete user-defined command" },
    { mode = "EX", lhs = ":delf[unction]", desc = "delete a user function" },
    { mode = "EX", lhs = ":delm[arks]", desc = "delete marks" },
    { mode = "EX", lhs = ":dif[fupdate]", desc = "update 'diff' buffers" },
    { mode = "EX", lhs = ":diffg[et]", desc = "remove differences in current buffer" },
    { mode = "EX", lhs = ":diffo[ff]", desc = "switch off diff mode" },
    { mode = "EX", lhs = ":diffp[atch]", desc = "apply a patch and show differences" },
    { mode = "EX", lhs = ":diffpu[t]", desc = "remove differences in other buffer" },
    { mode = "EX", lhs = ":diffs[plit]", desc = "show differences with another file" },
    { mode = "EX", lhs = ":diffthis", desc = "make current window a diff window" },
    { mode = "EX", lhs = ":dig[raphs]", desc = "show or enter digraphs" },
    { mode = "EX", lhs = ":di[splay]", desc = "display registers" },
    { mode = "EX", lhs = ":dj[ump]", desc = "jump to #define" },
    { mode = "EX", lhs = ":dl", desc = "short for |:delete| with the 'l' flag" },
    { mode = "EX", lhs = ":dli[st]", desc = "list #defines" },
    { mode = "EX", lhs = ":do[autocmd]", desc = "apply autocommands to current buffer" },
    { mode = "EX", lhs = ":doautoa[ll]", desc = "apply autocommands for all loaded buffers" },
    { mode = "EX", lhs = ":d[elete]p", desc = "short for |:delete| with the 'p' flag" },
    { mode = "EX", lhs = ":dr[op]", desc = "jump to window editing file or edit file in" },
    { mode = "EX", lhs = ":ds[earch]", desc = "list one #define" },
    { mode = "EX", lhs = ":dsp[lit]", desc = "split window and jump to #define" },
    { mode = "EX", lhs = ":e[dit]", desc = "edit a file" },
    { mode = "EX", lhs = ":ea[rlier]", desc = "go to older change, undo" },
    { mode = "EX", lhs = ":ec[ho]", desc = "echoes the result of expressions" },
    { mode = "EX", lhs = ":echoe[rr]", desc = "like :echo, show like an error and use history" },
    { mode = "EX", lhs = ":echoh[l]", desc = "set highlighting for echo commands" },
    { mode = "EX", lhs = ":echom[sg]", desc = "same as :echo, put message in history" },
    { mode = "EX", lhs = ":echon", desc = "same as :echo, but without <EOL>" },
    { mode = "EX", lhs = ":el[se]", desc = "part of an :if command" },
    { mode = "EX", lhs = ":elsei[f]", desc = "part of an :if command" },
    { mode = "EX", lhs = ":em[enu]", desc = "execute a menu by name" },
    { mode = "EX", lhs = ":en[dif]", desc = "end previous :if" },
    { mode = "EX", lhs = ":endfo[r]", desc = "end previous :for" },
    { mode = "EX", lhs = ":endf[unction]", desc = "end of a user function started with :function" },
    { mode = "EX", lhs = ":endt[ry]", desc = "end previous :try" },
    { mode = "EX", lhs = ":endw[hile]", desc = "end previous :while" },
    { mode = "EX", lhs = ":ene[w]", desc = "edit a new, unnamed buffer" },
    { mode = "EX", lhs = ":ev[al]", desc = "evaluate an expression and discard the result" },
    { mode = "EX", lhs = ":ex", desc = "same as \":edit\"" },
    { mode = "EX", lhs = ":exe[cute]", desc = "execute result of expressions" },
    { mode = "EX", lhs = ":exi[t]", desc = "same as \":xit\"" },
    { mode = "EX", lhs = ":exu[sage]", desc = "overview of Ex commands" },
    { mode = "EX", lhs = ":fc[lose]", desc = "close floating window" },
    { mode = "EX", lhs = ":f[ile]", desc = "show or set the current file name" },
    { mode = "EX", lhs = ":files", desc = "list all files in the buffer list" },
    { mode = "EX", lhs = ":filet[ype]", desc = "switch file type detection on/off" },
    { mode = "EX", lhs = ":filt[er]", desc = "filter output of following command" },
    { mode = "EX", lhs = ":fin[d]", desc = "find file in 'path' and edit it" },
    { mode = "EX", lhs = ":fina[lly]", desc = "part of a :try command" },
    { mode = "EX", lhs = ":fini[sh]", desc = "quit sourcing a Vim script" },
    { mode = "EX", lhs = ":fir[st]", desc = "go to the first file in the argument list" },
    { mode = "EX", lhs = ":fo[ld]", desc = "create a fold" },
    { mode = "EX", lhs = ":foldc[lose]", desc = "close folds" },
    { mode = "EX", lhs = ":foldd[oopen]", desc = "execute command on lines not in a closed fold" },
    { mode = "EX", lhs = ":folddoc[losed]", desc = "execute command on lines in a closed fold" },
    { mode = "EX", lhs = ":foldo[pen]", desc = "open folds" },
    { mode = "EX", lhs = ":for", desc = "for loop" },
    { mode = "EX", lhs = ":fu[nction]", desc = "define a user function" },
    { mode = "EX", lhs = ":g[lobal]", desc = "execute commands for matching lines" },
    { mode = "EX", lhs = ":go[to]", desc = "go to byte in the buffer" },
    { mode = "EX", lhs = ":gr[ep]", desc = "run 'grepprg' and jump to first match" },
    { mode = "EX", lhs = ":grepa[dd]", desc = "like :grep, but append to current list" },
    { mode = "EX", lhs = ":gu[i]", desc = "start the GUI" },
    { mode = "EX", lhs = ":gv[im]", desc = "start the GUI" },
    { mode = "EX", lhs = ":h[elp]", desc = "open a help window" },
    { mode = "EX", lhs = ":helpc[lose]", desc = "close one help window" },
    { mode = "EX", lhs = ":helpg[rep]", desc = "like \":grep\" but searches help files" },
    { mode = "EX", lhs = ":helpt[ags]", desc = "generate help tags for a directory" },
    { mode = "EX", lhs = ":hi[ghlight]", desc = "specify highlighting methods" },
    { mode = "EX", lhs = ":hid[e]", desc = "hide current buffer for a command" },
    { mode = "EX", lhs = ":his[tory]", desc = "print a history list" },
    { mode = "EX", lhs = ":hor[izontal]", desc = "following window command work horizontally" },
    { mode = "EX", lhs = ":i[nsert]", desc = "insert text" },
    { mode = "Insert", lhs = ":ia[bbrev]", desc = "like \":abbrev\" but for Insert mode" },
    { mode = "Insert", lhs = ":iabc[lear]", desc = "like \":abclear\" but for Insert mode" },
    { mode = "Insert", lhs = ":if", desc = "execute commands when condition met" },
    { mode = "Insert", lhs = ":ij[ump]", desc = "jump to definition of identifier" },
    { mode = "Insert", lhs = ":il[ist]", desc = "list lines where identifier matches" },
    { mode = "Insert", lhs = ":im[ap]", desc = "like \":map\" but for Insert mode" },
    { mode = "Insert", lhs = ":imapc[lear]", desc = "like \":mapclear\" but for Insert mode" },
    { mode = "Insert", lhs = ":ime[nu]", desc = "add menu for Insert mode" },
    { mode = "Insert", lhs = ":ino[remap]", desc = "like \":noremap\" but for Insert mode" },
    { mode = "Insert", lhs = ":inorea[bbrev]", desc = "like \":noreabbrev\" but for Insert mode" },
    { mode = "Insert", lhs = ":inoreme[nu]", desc = "like \":noremenu\" but for Insert mode" },
    { mode = "Insert", lhs = ":int[ro]", desc = "print the introductory message" },
    { mode = "Insert", lhs = ":is[earch]", desc = "list one line where identifier matches" },
    { mode = "Insert", lhs = ":isp[lit]", desc = "split window and jump to definition of" },
    { mode = "Insert", lhs = ":iu[nmap]", desc = "like \":unmap\" but for Insert mode" },
    { mode = "Insert", lhs = ":iuna[bbrev]", desc = "like \":unabbrev\" but for Insert mode" },
    { mode = "Insert", lhs = ":iunme[nu]", desc = "remove menu for Insert mode" },
    { mode = "Insert", lhs = ":j[oin]", desc = "join lines" },
    { mode = "Insert", lhs = ":ju[mps]", desc = "print the jump list" },
    { mode = "Insert", lhs = ":k", desc = "set a mark" },
    { mode = "Insert", lhs = ":keepa[lt]", desc = "following command keeps the alternate file" },
    { mode = "Insert", lhs = ":kee[pmarks]", desc = "following command keeps marks where they are" },
    { mode = "Insert", lhs = ":keepj[umps]", desc = "following command keeps jumplist and marks" },
    { mode = "Insert", lhs = ":keepp[atterns]", desc = "following command keeps search pattern history" },
    { mode = "Insert", lhs = ":lN[ext]", desc = "go to previous entry in location list" },
    { mode = "Insert", lhs = ":lNf[ile]", desc = "go to last entry in previous file" },
    { mode = "Insert", lhs = ":l[ist]", desc = "print lines" },
    { mode = "Insert", lhs = ":lab[ove]", desc = "go to location above current line" },
    { mode = "Insert", lhs = ":lad[dexpr]", desc = "add locations from expr" },
    { mode = "Insert", lhs = ":laddb[uffer]", desc = "add locations from buffer" },
    { mode = "Insert", lhs = ":laddf[ile]", desc = "add locations to current location list" },
    { mode = "Insert", lhs = ":laf[ter]", desc = "go to location after current cursor" },
    { mode = "Insert", lhs = ":la[st]", desc = "go to the last file in the argument list" },
    { mode = "Insert", lhs = ":lan[guage]", desc = "set the language (locale)" },
    { mode = "Insert", lhs = ":lat[er]", desc = "go to newer change, redo" },
    { mode = "Insert", lhs = ":lbef[ore]", desc = "go to location before current cursor" },
    { mode = "Insert", lhs = ":lbel[ow]", desc = "go to location below current line" },
    { mode = "Insert", lhs = ":lbo[ttom]", desc = "scroll to the bottom of the location window" },
    { mode = "Insert", lhs = ":lb[uffer]", desc = "parse locations and jump to first location" },
    { mode = "Insert", lhs = ":lc[d]", desc = "change directory locally" },
    { mode = "Insert", lhs = ":lch[dir]", desc = "change directory locally" },
    { mode = "Insert", lhs = ":lcl[ose]", desc = "close location window" },
    { mode = "Insert", lhs = ":ld[o]", desc = "execute command in valid location list entries" },
    { mode = "Insert", lhs = ":lfd[o]", desc = "execute command in each file in location list" },
    { mode = "Insert", lhs = ":le[ft]", desc = "left align lines" },
    { mode = "Insert", lhs = ":lefta[bove]", desc = "make split window appear left or above" },
    { mode = "Insert", lhs = ":let", desc = "assign a value to a variable or option" },
    { mode = "Insert", lhs = ":lex[pr]", desc = "read locations from expr and jump to first" },
    { mode = "Insert", lhs = ":lf[ile]", desc = "read file with locations and jump to first" },
    { mode = "Insert", lhs = ":lfir[st]", desc = "go to the specified location, default first one" },
    { mode = "Insert", lhs = ":lgetb[uffer]", desc = "get locations from buffer" },
    { mode = "Insert", lhs = ":lgete[xpr]", desc = "get locations from expr" },
    { mode = "Insert", lhs = ":lg[etfile]", desc = "read file with locations" },
    { mode = "Insert", lhs = ":lgr[ep]", desc = "run 'grepprg' and jump to first match" },
    { mode = "Insert", lhs = ":lgrepa[dd]", desc = "like :grep, but append to current list" },
    { mode = "Insert", lhs = ":lh[elpgrep]", desc = "like \":helpgrep\" but uses location list" },
    { mode = "Insert", lhs = ":lhi[story]", desc = "list the location lists" },
    { mode = "Insert", lhs = ":ll", desc = "go to specific location" },
    { mode = "Insert", lhs = ":lla[st]", desc = "go to the specified location, default last one" },
    { mode = "Insert", lhs = ":lli[st]", desc = "list all locations" },
    { mode = "Insert", lhs = ":lmak[e]", desc = "execute external command 'makeprg' and parse" },
    { mode = "Insert", lhs = ":lm[ap]", desc = "like \":map!\" but includes Lang-Arg mode" },
    { mode = "Insert", lhs = ":lmapc[lear]", desc = "like \":mapclear!\" but includes Lang-Arg mode" },
    { mode = "Insert", lhs = ":lne[xt]", desc = "go to next location" },
    { mode = "Insert", lhs = ":lnew[er]", desc = "go to newer location list" },
    { mode = "Insert", lhs = ":lnf[ile]", desc = "go to first location in next file" },
    { mode = "Insert", lhs = ":ln[oremap]", desc = "like \":noremap!\" but includes Lang-Arg mode" },
    { mode = "Insert", lhs = ":loadk[eymap]", desc = "load the following keymaps until EOF" },
    { mode = "Insert", lhs = ":lo[adview]", desc = "load view for current window from a file" },
    { mode = "Insert", lhs = ":loc[kmarks]", desc = "following command keeps marks where they are" },
    { mode = "Insert", lhs = ":lockv[ar]", desc = "lock variables" },
    { mode = "Insert", lhs = ":lol[der]", desc = "go to older location list" },
    { mode = "Insert", lhs = ":lope[n]", desc = "open location window" },
    { mode = "Insert", lhs = ":lp[revious]", desc = "go to previous location" },
    { mode = "Insert", lhs = ":lpf[ile]", desc = "go to last location in previous file" },
    { mode = "Insert", lhs = ":lr[ewind]", desc = "go to the specified location, default first one" },
    { mode = "Insert", lhs = ":ls", desc = "list all buffers" },
    { mode = "Insert", lhs = ":lt[ag]", desc = "jump to tag and add matching tags to the" },
    { mode = "Insert", lhs = ":lu[nmap]", desc = "like \":unmap!\" but includes Lang-Arg mode" },
    { mode = "Insert", lhs = ":lua", desc = "execute |Lua| command" },
    { mode = "Insert", lhs = ":luad[o]", desc = "execute Lua command for each line" },
    { mode = "Insert", lhs = ":luaf[ile]", desc = "execute |Lua| script file" },
    { mode = "Insert", lhs = ":lv[imgrep]", desc = "search for pattern in files" },
    { mode = "Insert", lhs = ":lvimgrepa[dd]", desc = "like :vimgrep, but append to current list" },
    { mode = "Insert", lhs = ":lw[indow]", desc = "open or close location window" },
    { mode = "Insert", lhs = ":m[ove]", desc = "move lines" },
    { mode = "Insert", lhs = ":ma[rk]", desc = "set a mark" },
    { mode = "Insert", lhs = ":mak[e]", desc = "execute external command 'makeprg' and parse" },
    { mode = "Insert", lhs = ":map", desc = "show or enter a mapping" },
    { mode = "Visual", lhs = ":mapc[lear]", desc = "clear all mappings for Normal and Visual mode" },
    { mode = "Visual", lhs = ":marks", desc = "list all marks" },
    { mode = "Visual", lhs = ":mat[ch]", desc = "define a match to highlight" },
    { mode = "Visual", lhs = ":me[nu]", desc = "enter a new menu item" },
    { mode = "Visual", lhs = ":mes[sages]", desc = "view previously displayed messages" },
    { mode = "Visual", lhs = ":mk[exrc]", desc = "write current mappings and settings to a file" },
    { mode = "Visual", lhs = ":mks[ession]", desc = "write session info to a file" },
    { mode = "Visual", lhs = ":mksp[ell]", desc = "produce .spl spell file" },
    { mode = "Visual", lhs = ":mkv[imrc]", desc = "write current mappings and settings to a file" },
    { mode = "Visual", lhs = ":mkvie[w]", desc = "write view of current window to a file" },
    { mode = "Visual", lhs = ":mod[e]", desc = "show or change the screen mode" },
    { mode = "Visual", lhs = ":n[ext]", desc = "go to next file in the argument list" },
    { mode = "Visual", lhs = ":new", desc = "create a new empty window" },
    { mode = "Normal", lhs = ":nm[ap]", desc = "like \":map\" but for Normal mode" },
    { mode = "Normal", lhs = ":nmapc[lear]", desc = "clear all mappings for Normal mode" },
    { mode = "Normal", lhs = ":nme[nu]", desc = "add menu for Normal mode" },
    { mode = "Normal", lhs = ":nn[oremap]", desc = "like \":noremap\" but for Normal mode" },
    { mode = "Normal", lhs = ":nnoreme[nu]", desc = "like \":noremenu\" but for Normal mode" },
    { mode = "Normal", lhs = ":noa[utocmd]", desc = "following commands don't trigger autocommands" },
    { mode = "Normal", lhs = ":no[remap]", desc = "enter a mapping that will not be remapped" },
    { mode = "Normal", lhs = ":noh[lsearch]", desc = "suspend 'hlsearch' highlighting" },
    { mode = "Normal", lhs = ":norea[bbrev]", desc = "enter an abbreviation that will not be" },
    { mode = "Normal", lhs = ":noreme[nu]", desc = "enter a menu that will not be remapped" },
    { mode = "Normal", lhs = ":norm[al]", desc = "execute Normal mode commands" },
    { mode = "Normal", lhs = ":nos[wapfile]", desc = "following commands don't create a swap file" },
    { mode = "Normal", lhs = ":nu[mber]", desc = "print lines with line number" },
    { mode = "Normal", lhs = ":nun[map]", desc = "like \":unmap\" but for Normal mode" },
    { mode = "Normal", lhs = ":nunme[nu]", desc = "remove menu for Normal mode" },
    { mode = "Normal", lhs = ":ol[dfiles]", desc = "list files that have marks in the |shada| file" },
    { mode = "Normal", lhs = ":om[ap]", desc = "like \":map\" but for Operator-pending mode" },
    { mode = "Normal", lhs = ":omapc[lear]", desc = "remove all mappings for Operator-pending mode" },
    { mode = "Normal", lhs = ":ome[nu]", desc = "add menu for Operator-pending mode" },
    { mode = "Normal", lhs = ":on[ly]", desc = "close all windows except the current one" },
    { mode = "Normal", lhs = ":ono[remap]", desc = "like \":noremap\" but for Operator-pending mode" },
    { mode = "Normal", lhs = ":onoreme[nu]", desc = "like \":noremenu\" but for Operator-pending mode" },
    { mode = "Normal", lhs = ":opt[ions]", desc = "open the options-window" },
    { mode = "Normal", lhs = ":ou[nmap]", desc = "like \":unmap\" but for Operator-pending mode" },
    { mode = "Normal", lhs = ":ounme[nu]", desc = "remove menu for Operator-pending mode" },
    { mode = "Normal", lhs = ":ow[nsyntax]", desc = "set new local syntax highlight for this window" },
    { mode = "Normal", lhs = ":pa[ckadd]", desc = "add a plugin from 'packpath'" },
    { mode = "Normal", lhs = ":packl[oadall]", desc = "load all packages under 'packpath'" },
    { mode = "Normal", lhs = ":pc[lose]", desc = "close preview window" },
    { mode = "Normal", lhs = ":ped[it]", desc = "edit file in the preview window" },
    { mode = "Normal", lhs = ":pe[rl]", desc = "execute perl command" },
    { mode = "Normal", lhs = ":perld[o]", desc = "execute perl command for each line" },
    { mode = "Normal", lhs = ":perlf[ile]", desc = "execute perl script file" },
    { mode = "Normal", lhs = ":p[rint]", desc = "print lines" },
    { mode = "Normal", lhs = ":profd[el]", desc = "stop profiling a function or script" },
    { mode = "Normal", lhs = ":prof[ile]", desc = "profiling functions and scripts" },
    { mode = "Normal", lhs = ":po[p]", desc = "jump to older entry in tag stack" },
    { mode = "Normal", lhs = ":popu[p]", desc = "popup a menu by name" },
    { mode = "Normal", lhs = ":pp[op]", desc = "\":pop\" in preview window" },
    { mode = "Normal", lhs = ":pre[serve]", desc = "write all text to swap file" },
    { mode = "Normal", lhs = ":prev[ious]", desc = "go to previous file in argument list" },
    { mode = "Normal", lhs = ":ps[earch]", desc = "like \":ijump\" but shows match in preview window" },
    { mode = "Normal", lhs = ":pt[ag]", desc = "show tag in preview window" },
    { mode = "Normal", lhs = ":ptN[ext]", desc = "|:tNext| in preview window" },
    { mode = "Normal", lhs = ":ptf[irst]", desc = "|:trewind| in preview window" },
    { mode = "Normal", lhs = ":ptj[ump]", desc = "|:tjump| and show tag in preview window" },
    { mode = "Normal", lhs = ":ptl[ast]", desc = "|:tlast| in preview window" },
    { mode = "Normal", lhs = ":ptn[ext]", desc = "|:tnext| in preview window" },
    { mode = "Normal", lhs = ":ptp[revious]", desc = "|:tprevious| in preview window" },
    { mode = "Normal", lhs = ":ptr[ewind]", desc = "|:trewind| in preview window" },
    { mode = "Normal", lhs = ":pts[elect]", desc = "|:tselect| and show tag in preview window" },
    { mode = "Normal", lhs = ":pu[t]", desc = "insert contents of register in the text" },
    { mode = "Normal", lhs = ":pw[d]", desc = "print current directory" },
    { mode = "Normal", lhs = ":py3", desc = "execute Python 3 command" },
    { mode = "Normal", lhs = ":python3", desc = "same as :py3" },
    { mode = "Normal", lhs = ":py3d[o]", desc = "execute Python 3 command for each line" },
    { mode = "Normal", lhs = ":py3f[ile]", desc = "execute Python 3 script file" },
    { mode = "Normal", lhs = ":py[thon]", desc = "execute Python command" },
    { mode = "Normal", lhs = ":pyd[o]", desc = "execute Python command for each line" },
    { mode = "Normal", lhs = ":pyf[ile]", desc = "execute Python script file" },
    { mode = "Normal", lhs = ":pyx", desc = "execute |python_x| command" },
    { mode = "Normal", lhs = ":pythonx", desc = "same as :pyx" },
    { mode = "Normal", lhs = ":pyxd[o]", desc = "execute |python_x| command for each line" },
    { mode = "Normal", lhs = ":pyxf[ile]", desc = "execute |python_x| script file" },
    { mode = "Normal", lhs = ":q[uit]", desc = "quit current window (when one window quit Vim)" },
    { mode = "Normal", lhs = ":quita[ll]", desc = "quit Vim" },
    { mode = "Normal", lhs = ":qa[ll]", desc = "quit Vim" },
    { mode = "Normal", lhs = ":r[ead]", desc = "read file into the text" },
    { mode = "Normal", lhs = ":rec[over]", desc = "recover a file from a swap file" },
    { mode = "Normal", lhs = ":red[o]", desc = "redo one undone change" },
    { mode = "Normal", lhs = ":redi[r]", desc = "redirect messages to a file or register" },
    { mode = "Normal", lhs = ":redr[aw]", desc = "force a redraw of the display" },
    { mode = "Normal", lhs = ":redraws[tatus]", desc = "force a redraw of the status line(s) and" },
    { mode = "Normal", lhs = ":reg[isters]", desc = "display the contents of registers" },
    { mode = "Normal", lhs = ":res[ize]", desc = "change current window height" },
    { mode = "Normal", lhs = ":ret[ab]", desc = "change tab size" },
    { mode = "Normal", lhs = ":retu[rn]", desc = "return from a user function" },
    { mode = "Normal", lhs = ":rew[ind]", desc = "go to the first file in the argument list" },
    { mode = "Normal", lhs = ":ri[ght]", desc = "right align text" },
    { mode = "Normal", lhs = ":rightb[elow]", desc = "make split window appear right or below" },
    { mode = "Normal", lhs = ":rsh[ada]", desc = "read from |shada| file" },
    { mode = "Normal", lhs = ":rub[y]", desc = "execute Ruby command" },
    { mode = "Normal", lhs = ":rubyd[o]", desc = "execute Ruby command for each line" },
    { mode = "Normal", lhs = ":rubyf[ile]", desc = "execute Ruby script file" },
    { mode = "Normal", lhs = ":rund[o]", desc = "read undo information from a file" },
    { mode = "Normal", lhs = ":ru[ntime]", desc = "source vim scripts in 'runtimepath'" },
    { mode = "Normal", lhs = ":s[ubstitute]", desc = "find and replace text" },
    { mode = "Normal", lhs = ":sN[ext]", desc = "split window and go to previous file in" },
    { mode = "Normal", lhs = ":san[dbox]", desc = "execute a command in the sandbox" },
    { mode = "Normal", lhs = ":sa[rgument]", desc = "split window and go to specific file in" },
    { mode = "Normal", lhs = ":sal[l]", desc = "open a window for each file in argument list" },
    { mode = "Normal", lhs = ":sav[eas]", desc = "save file under another name." },
    { mode = "Normal", lhs = ":sb[uffer]", desc = "split window and go to specific file in the" },
    { mode = "Normal", lhs = ":sbN[ext]", desc = "split window and go to previous file in the" },
    { mode = "Normal", lhs = ":sba[ll]", desc = "open a window for each file in the buffer list" },
    { mode = "Normal", lhs = ":sbf[irst]", desc = "split window and go to first file in the" },
    { mode = "Normal", lhs = ":sbl[ast]", desc = "split window and go to last file in buffer" },
    { mode = "Normal", lhs = ":sbm[odified]", desc = "split window and go to modified file in the" },
    { mode = "Normal", lhs = ":sbn[ext]", desc = "split window and go to next file in the buffer" },
    { mode = "Normal", lhs = ":sbp[revious]", desc = "split window and go to previous file in the" },
    { mode = "Normal", lhs = ":sbr[ewind]", desc = "split window and go to first file in the" },
    { mode = "Normal", lhs = ":scr[iptnames]", desc = "list names of all sourced Vim scripts" },
    { mode = "Normal", lhs = ":se[t]", desc = "show or set options" },
    { mode = "Normal", lhs = ":setf[iletype]", desc = "set 'filetype', unless it was set already" },
    { mode = "Normal", lhs = ":setg[lobal]", desc = "show global values of options" },
    { mode = "Normal", lhs = ":setl[ocal]", desc = "show or set options locally" },
    { mode = "Normal", lhs = ":sf[ind]", desc = "split current window and edit file in 'path'" },
    { mode = "Normal", lhs = ":sfir[st]", desc = "split window and go to first file in the" },
    { mode = "Normal", lhs = ":sig[n]", desc = "manipulate signs" },
    { mode = "Normal", lhs = ":sil[ent]", desc = "run a command silently" },
    { mode = "Normal", lhs = ":sl[eep]", desc = "do nothing for a few seconds" },
    { mode = "Normal", lhs = ":sla[st]", desc = "split window and go to last file in the" },
    { mode = "Normal", lhs = ":sm[agic]", desc = ":substitute with 'magic'" },
    { mode = "Normal", lhs = ":smap", desc = "like \":map\" but for Select mode" },
    { mode = "Normal", lhs = ":smapc[lear]", desc = "remove all mappings for Select mode" },
    { mode = "Normal", lhs = ":sme[nu]", desc = "add menu for Select mode" },
    { mode = "Normal", lhs = ":sn[ext]", desc = "split window and go to next file in the" },
    { mode = "Normal", lhs = ":sno[magic]", desc = ":substitute with 'nomagic'" },
    { mode = "Normal", lhs = ":snor[emap]", desc = "like \":noremap\" but for Select mode" },
    { mode = "Normal", lhs = ":snoreme[nu]", desc = "like \":noremenu\" but for Select mode" },
    { mode = "Normal", lhs = ":sor[t]", desc = "sort lines" },
    { mode = "Normal", lhs = ":so[urce]", desc = "read Vim or Ex commands from a file" },
    { mode = "Normal", lhs = ":spelld[ump]", desc = "split window and fill with all correct words" },
    { mode = "Normal", lhs = ":spe[llgood]", desc = "add good word for spelling" },
    { mode = "Normal", lhs = ":spelli[nfo]", desc = "show info about loaded spell files" },
    { mode = "Normal", lhs = ":spellra[re]", desc = "add rare word for spelling" },
    { mode = "Normal", lhs = ":spellr[epall]", desc = "replace all bad words like last |z=|" },
    { mode = "Normal", lhs = ":spellu[ndo]", desc = "remove good or bad word" },
    { mode = "Normal", lhs = ":spellw[rong]", desc = "add spelling mistake" },
    { mode = "Normal", lhs = ":sp[lit]", desc = "split current window" },
    { mode = "Normal", lhs = ":spr[evious]", desc = "split window and go to previous file in the" },
    { mode = "Normal", lhs = ":sre[wind]", desc = "split window and go to first file in the" },
    { mode = "Normal", lhs = ":st[op]", desc = "suspend the editor or escape to a shell" },
    { mode = "Normal", lhs = ":sta[g]", desc = "split window and jump to a tag" },
    { mode = "Insert", lhs = ":star[tinsert]", desc = "start Insert mode" },
    { mode = "Insert", lhs = ":startr[eplace]", desc = "start Replace mode" },
    { mode = "Insert", lhs = ":stopi[nsert]", desc = "stop Insert mode" },
    { mode = "Insert", lhs = ":stj[ump]", desc = "do \":tjump\" and split window" },
    { mode = "Insert", lhs = ":sts[elect]", desc = "do \":tselect\" and split window" },
    { mode = "Insert", lhs = ":sun[hide]", desc = "same as \":unhide\"" },
    { mode = "Insert", lhs = ":sunm[ap]", desc = "like \":unmap\" but for Select mode" },
    { mode = "Insert", lhs = ":sunme[nu]", desc = "remove menu for Select mode" },
    { mode = "Insert", lhs = ":sus[pend]", desc = "same as \":stop\"" },
    { mode = "Insert", lhs = ":sv[iew]", desc = "split window and edit file read-only" },
    { mode = "Insert", lhs = ":sw[apname]", desc = "show the name of the current swap file" },
    { mode = "Insert", lhs = ":sy[ntax]", desc = "syntax highlighting" },
    { mode = "Insert", lhs = ":synti[me]", desc = "measure syntax highlighting speed" },
    { mode = "Insert", lhs = ":sync[bind]", desc = "sync scroll binding" },
    { mode = "Insert", lhs = ":t", desc = "same as \":copy\"" },
    { mode = "Insert", lhs = ":tN[ext]", desc = "jump to previous matching tag" },
    { mode = "Insert", lhs = ":tabN[ext]", desc = "go to previous tab page" },
    { mode = "Insert", lhs = ":tabc[lose]", desc = "close current tab page" },
    { mode = "Insert", lhs = ":tabdo", desc = "execute command in each tab page" },
    { mode = "Insert", lhs = ":tabe[dit]", desc = "edit a file in a new tab page" },
    { mode = "Insert", lhs = ":tabf[ind]", desc = "find file in 'path', edit it in a new tab page" },
    { mode = "Insert", lhs = ":tabfir[st]", desc = "go to first tab page" },
    { mode = "Insert", lhs = ":tabl[ast]", desc = "go to last tab page" },
    { mode = "Insert", lhs = ":tabm[ove]", desc = "move tab page to other position" },
    { mode = "Insert", lhs = ":tabnew", desc = "edit a file in a new tab page" },
    { mode = "Insert", lhs = ":tabn[ext]", desc = "go to next tab page" },
    { mode = "Insert", lhs = ":tabo[nly]", desc = "close all tab pages except the current one" },
    { mode = "Insert", lhs = ":tabp[revious]", desc = "go to previous tab page" },
    { mode = "Insert", lhs = ":tabr[ewind]", desc = "go to first tab page" },
    { mode = "Insert", lhs = ":tabs", desc = "list the tab pages and what they contain" },
    { mode = "Insert", lhs = ":tab", desc = "create new tab when opening new window" },
    { mode = "Insert", lhs = ":ta[g]", desc = "jump to tag" },
    { mode = "Insert", lhs = ":tags", desc = "show the contents of the tag stack" },
    { mode = "Insert", lhs = ":tc[d]", desc = "change directory for tab page" },
    { mode = "Insert", lhs = ":tch[dir]", desc = "change directory for tab page" },
    { mode = "Insert", lhs = ":te[rminal]", desc = "open a terminal buffer" },
    { mode = "Insert", lhs = ":tf[irst]", desc = "jump to first matching tag" },
    { mode = "Insert", lhs = ":th[row]", desc = "throw an exception" },
    { mode = "Insert", lhs = ":tj[ump]", desc = "like \":tselect\", but jump directly when there" },
    { mode = "Insert", lhs = ":tl[ast]", desc = "jump to last matching tag" },
    { mode = "Insert", lhs = ":tlm[enu]", desc = "add menu for |Terminal-mode|" },
    { mode = "Insert", lhs = ":tln[oremenu]", desc = "like \":noremenu\" but for |Terminal-mode|" },
    { mode = "Insert", lhs = ":tlu[nmenu]", desc = "remove menu for |Terminal-mode|" },
    { mode = "Insert", lhs = ":tmapc[lear]", desc = "remove all mappings for |Terminal-mode|" },
    { mode = "Insert", lhs = ":tma[p]", desc = "like \":map\" but for |Terminal-mode|" },
    { mode = "Insert", lhs = ":tm[enu]", desc = "define menu tooltip" },
    { mode = "Insert", lhs = ":tn[ext]", desc = "jump to next matching tag" },
    { mode = "Insert", lhs = ":tno[remap]", desc = "like \":noremap\" but for |Terminal-mode|" },
    { mode = "Insert", lhs = ":to[pleft]", desc = "make split window appear at top or far left" },
    { mode = "Insert", lhs = ":tp[revious]", desc = "jump to previous matching tag" },
    { mode = "Insert", lhs = ":tr[ewind]", desc = "jump to first matching tag" },
    { mode = "Insert", lhs = ":trust", desc = "add or remove file from trust database" },
    { mode = "Insert", lhs = ":try", desc = "execute commands, abort on error or exception" },
    { mode = "Insert", lhs = ":ts[elect]", desc = "list matching tags and select one" },
    { mode = "Insert", lhs = ":tunma[p]", desc = "like \":unmap\" but for |Terminal-mode|" },
    { mode = "Insert", lhs = ":tu[nmenu]", desc = "remove menu tooltip" },
    { mode = "Insert", lhs = ":u[ndo]", desc = "undo last change(s)" },
    { mode = "Insert", lhs = ":undoj[oin]", desc = "join next change with previous undo block" },
    { mode = "Insert", lhs = ":undol[ist]", desc = "list leafs of the undo tree" },
    { mode = "Insert", lhs = ":una[bbreviate]", desc = "remove abbreviation" },
    { mode = "Insert", lhs = ":unh[ide]", desc = "open a window for each loaded file in the" },
    { mode = "Insert", lhs = ":unl[et]", desc = "delete variable" },
    { mode = "Insert", lhs = ":unlo[ckvar]", desc = "unlock variables" },
    { mode = "Insert", lhs = ":unm[ap]", desc = "remove mapping" },
    { mode = "Insert", lhs = ":unme[nu]", desc = "remove menu" },
    { mode = "Insert", lhs = ":uns[ilent]", desc = "run a command not silently" },
    { mode = "Insert", lhs = ":up[date]", desc = "write buffer if modified" },
    { mode = "Insert", lhs = ":v[global]", desc = "execute commands for not matching lines" },
    { mode = "Insert", lhs = ":ve[rsion]", desc = "print version number and other info" },
    { mode = "Insert", lhs = ":verb[ose]", desc = "execute command with 'verbose' set" },
    { mode = "Insert", lhs = ":vert[ical]", desc = "make following command split vertically" },
    { mode = "Insert", lhs = ":vim[grep]", desc = "search for pattern in files" },
    { mode = "Insert", lhs = ":vimgrepa[dd]", desc = "like :vimgrep, but append to current list" },
    { mode = "Insert", lhs = ":vi[sual]", desc = "same as \":edit\", but turns off \"Ex\" mode" },
    { mode = "Normal", lhs = ":viu[sage]", desc = "overview of Normal mode commands" },
    { mode = "Normal", lhs = ":vie[w]", desc = "edit a file read-only" },
    { mode = "Normal", lhs = ":vm[ap]", desc = "like \":map\" but for Visual+Select mode" },
    { mode = "Normal", lhs = ":vmapc[lear]", desc = "remove all mappings for Visual+Select mode" },
    { mode = "Normal", lhs = ":vme[nu]", desc = "add menu for Visual+Select mode" },
    { mode = "Normal", lhs = ":vne[w]", desc = "create a new empty window, vertically split" },
    { mode = "Normal", lhs = ":vn[oremap]", desc = "like \":noremap\" but for Visual+Select mode" },
    { mode = "Normal", lhs = ":vnoreme[nu]", desc = "like \":noremenu\" but for Visual+Select mode" },
    { mode = "Normal", lhs = ":vs[plit]", desc = "split current window vertically" },
    { mode = "Normal", lhs = ":vu[nmap]", desc = "like \":unmap\" but for Visual+Select mode" },
    { mode = "Normal", lhs = ":vunme[nu]", desc = "remove menu for Visual+Select mode" },
    { mode = "Normal", lhs = ":windo", desc = "execute command in each window" },
    { mode = "Normal", lhs = ":w[rite]", desc = "write to a file" },
    { mode = "Normal", lhs = ":wN[ext]", desc = "write to a file and go to previous file in" },
    { mode = "Normal", lhs = ":wa[ll]", desc = "write all (changed) buffers" },
    { mode = "Normal", lhs = ":wh[ile]", desc = "execute loop for as long as condition met" },
    { mode = "Normal", lhs = ":wi[nsize]", desc = "get or set window size (obsolete)" },
    { mode = "Normal", lhs = ":winc[md]", desc = "execute a Window (CTRL-W) command" },
    { mode = "Normal", lhs = ":winp[os]", desc = "get or set window position" },
    { mode = "Normal", lhs = ":wn[ext]", desc = "write to a file and go to next file in" },
    { mode = "Normal", lhs = ":wp[revious]", desc = "write to a file and go to previous file in" },
    { mode = "Normal", lhs = ":wq", desc = "write to a file and quit window or Vim" },
    { mode = "Normal", lhs = ":wqa[ll]", desc = "write all changed buffers and quit Vim" },
    { mode = "Normal", lhs = ":wsh[ada]", desc = "write to ShaDa file" },
    { mode = "Normal", lhs = ":wu[ndo]", desc = "write undo information to a file" },
    { mode = "Normal", lhs = ":x[it]", desc = "write if buffer changed and close window" },
    { mode = "Normal", lhs = ":xa[ll]", desc = "same as \":wqall\"" },
    { mode = "Visual", lhs = ":xmapc[lear]", desc = "remove all mappings for Visual mode" },
    { mode = "Visual", lhs = ":xm[ap]", desc = "like \":map\" but for Visual mode" },
    { mode = "Visual", lhs = ":xme[nu]", desc = "add menu for Visual mode" },
    { mode = "Visual", lhs = ":xn[oremap]", desc = "like \":noremap\" but for Visual mode" },
    { mode = "Visual", lhs = ":xnoreme[nu]", desc = "like \":noremenu\" but for Visual mode" },
    { mode = "Visual", lhs = ":xu[nmap]", desc = "like \":unmap\" but for Visual mode" },
    { mode = "Visual", lhs = ":xunme[nu]", desc = "remove menu for Visual mode" },
    { mode = "Visual", lhs = ":y[ank]", desc = "yank lines into a register" },
    { mode = "Visual", lhs = ":z", desc = "print some lines" },
    { mode = "Visual", lhs = ":~", desc = "repeat last \":substitute\"" },
}
